{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hank's Docs home page These are my notes for stuff I want to share. Technically not a blog, I suppose.","title":"Hank's Docs home page"},{"location":"#hanks-docs-home-page","text":"These are my notes for stuff I want to share. Technically not a blog, I suppose.","title":"Hank's Docs home page"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/","text":"Debian Root on ZFS to a new drive Motivation Old drives on a file server are old and decrepit and not long for this world. Contributing This description is licensed under Creative Commons Zero v1.0 Universal . I appreciate contributions including: pointing out typos identifying descriptions that are ambiguous or otherwise not clear identifying obvious or not so obvious errors or ommisions describing better ways to do any or all of this anything else that improves these instructions Particular areas that would benefit other ways to manage pool renaming usage for systems that employ EFI boot Contributions can be submitted as issues or pull requests or direct contact. I will credit any contributors here. Hank Barta - original version Sam Van den Eynde - clone w/out live environment and get renaming right The actual repo for this document is https://github.com/HankB/MkDocs-blog . Initial setup DEBIAN 11 (Bullseye) with ZFS on root following the instructions at https://openzfs.github.io/openzfs-docs/Getting%20Started/Debian/Debian%20Bullseye%20Root%20on%20ZFS.html# Constraints Old motherboard does not support UEFI boot. Current (target) install is on 500GB mirrored HDDs and using about 7% of capacity. The desire is to migrate to smaller SSDs (240GB SSDs.) Current install uses the bpool / rpool split as specified in the instructions referenced above. Plan Format and partition the target SSD as described in the instructions above. Create root and boot pools as described and named to match the original pools: rpool and bpool . zfs send | zfs recv the two filesystems from the existing install to the target SSD. Perform necessary rescue operations to make the target SSD bootable. These operations are being performed on a test system to minimize possible disruption with the \"real\" server until a working procedure is identified. Issues Pool naming was a continuing problem. With new pools given different names, the cache files were wrong and the pools would not import at boot. This is probably a solvable problem, but the solution eluded me during several tries. The first successful attempt was to create the new pools in the live environment and name them to match the existing (old) pools. The old pools could then be imnported using different names, the related filesystems transferred and the rescue operations completed. Execution (2023-03-10) Boot a Debian 11.6 live ISO (debian-live-11.6.0-amd64-gnome+nonfree.iso) using Ventoy. Install and start openssh-server and go into power settings to disable automatic suspend. Add contrib to /etc/apt/sources.list , updat and install ZFS. Identify the target SSD, in this case /dev/sdi Identify and secure erase root@debian:~# ls -l /dev/disk/by-id/wwn*|grep sdi lrwxrwxrwx 1 root root 9 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c -> ../../sdi lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part1 -> ../../sdi1 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part2 -> ../../sdi2 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part3 -> ../../sdi3 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part4 -> ../../sdi4 root@debian:~# DISK=/dev/disk/by-id/wwn-0x5000c5002ff22a4c\\ > root@debian:~# hdparm --security-set-pass NULL $DISK security_password: \"\" /dev/disk/by-id/wwn-0x5000c5002ff22a4c: Issuing SECURITY_SET_PASS command, password=\"\", user=user, mode=high root@debian:~# hdparm --security-erase-enhanced NULL $DISK security_password: \"\" /dev/disk/by-id/wwn-0x5000c5002ff22a4c: Issuing SECURITY_ERASE command, password=\"\", user=user root@debian:~# partprobe root@debian:~# ls -l /dev/disk/by-id/wwn*|grep sdi lrwxrwxrwx 1 root root 9 Mar 10 19:56 /dev/disk/by-id/wwn-0x5000c5002ff22a4c -> ../../sdi root@debian:~# Partition sgdisk -a1 -n1:24K:+1000K -t1:EF02 $DISK sgdisk -n2:1M:+512M -t2:EF00 $DISK sgdisk -n3:0:+1G -t3:BF01 $DISK sgdisk -n4:0:0 -t4:BF00 $DISK sgdisk -p $DISK root@acorn3:~# sgdisk -a1 -n1:24K:+1000K -t1:EF02 $DISK Warning: Partition table header claims that the size of partition table entries is 0 bytes, but this program supports only 128-byte entries. Adjusting accordingly, but partition table may be garbage. Warning: Partition table header claims that the size of partition table entries is 0 bytes, but this program supports only 128-byte entries. Adjusting accordingly, but partition table may be garbage. Creating new GPT entries in memory. Warning: Setting alignment to a value that does not match the disk's physical block size! Performance degradation may result! Physical block size = 4096 Logical block size = 512 Optimal alignment = 8 or multiples thereof. The operation has completed successfully. root@acorn3:~# sgdisk -n2:1M:+512M -t2:EF00 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -n3:0:+1G -t3:BF01 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -n4:0:0 -t4:BF00 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -p $DISK Disk /dev/disk/by-id/wwn-0x5000c5002ff22a4c: 468862128 sectors, 223.6 GiB Sector size (logical/physical): 512/4096 bytes Disk identifier (GUID): ADDCB737-EF88-4B31-80B0-2F3881377244 Partition table holds up to 128 entries Main partition table begins at sector 2 and ends at sector 33 First usable sector is 34, last usable sector is 468862094 Partitions will be aligned on 16-sector boundaries Total free space is 14 sectors (7.0 KiB) Number Start (sector) End (sector) Size Code Name 1 48 2047 1000.0 KiB EF02 2 2048 1050623 512.0 MiB EF00 3 1050624 3147775 1024.0 MiB BF01 4 3147776 468862094 222.1 GiB BF00 root@acorn3:~# Create pools zpool create \\ -o ashift=12 \\ -o autotrim=on -d \\ -o cachefile=/etc/zfs/zpool.cache \\ -o feature@async_destroy=enabled \\ -o feature@bookmarks=enabled \\ -o feature@embedded_data=enabled \\ -o feature@empty_bpobj=enabled \\ -o feature@enabled_txg=enabled \\ -o feature@extensible_dataset=enabled \\ -o feature@filesystem_limits=enabled \\ -o feature@hole_birth=enabled \\ -o feature@large_blocks=enabled \\ -o feature@livelist=enabled \\ -o feature@lz4_compress=enabled \\ -o feature@spacemap_histogram=enabled \\ -o feature@zpool_checkpoint=enabled \\ -O devices=off \\ -O acltype=posixacl -O xattr=sa \\ -O compression=lz4 \\ -O normalization=formD \\ -O relatime=on \\ -O canmount=off -O mountpoint=/boot -R /mnt \\ bpool ${DISK}-part3 zpool create \\ -o ashift=12 \\ -o autotrim=on \\ -O acltype=posixacl -O xattr=sa -O dnodesize=auto \\ -O compression=lz4 \\ -O normalization=formD \\ -O relatime=on \\ -O canmount=off -O mountpoint=/ -R /mnt \\ rpool ${DISK}-part4 Result root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 624K 959M - - 0% 0% 1.00x ONLINE /mnt rpool 222G 420K 222G - - 0% 0% 1.00x ONLINE /mnt root@debian:~# zfs list -r NAME USED AVAIL REFER MOUNTPOINT bpool 444K 831M 96K /mnt/boot rpool 420K 215G 96K /mnt root@debian:~# Import source pools Identify root@debian:~# zpool import ... pool: rpool id: 4536037978216782426 state: ONLINE status: The pool was last accessed by another system. action: The pool can be imported using its name or numeric identifier and the '-f' flag. see: https://openzfs.github.io/openzfs-docs/msg/ZFS-8000-EY config: rpool ONLINE ata-WDC_WD10S21X-24R1BT0-SSHD-8GB_WD-WXA1A74CP57R-part4 ONLINE ... pool: bpool id: 2081542946275218239 state: ONLINE status: The pool was last accessed by another system. action: The pool can be imported using its name or numeric identifier and the '-f' flag. see: https://openzfs.github.io/openzfs-docs/msg/ZFS-8000-EY config: bpool ONLINE ata-WDC_WD10S21X-24R1BT0-SSHD-8GB_WD-WXA1A74CP57R-part3 ONLINE root@debian:~# zpool import -f 4536037978216782426 rpool_old zpool import -f 2081542946275218239 bpool_old root@debian:~# zpool import -f 4536037978216782426 rpool_old root@debian:~# zpool import -f 2081542946275218239 bpool_old root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 624K 959M - - 0% 0% 1.00x ONLINE /mnt bpool_old 960M 218M 742M - - 4% 22% 1.00x ONLINE - rpool 222G 420K 222G - - 0% 0% 1.00x ONLINE /mnt rpool_old 28G 16.5G 11.5G - - 34% 59% 1.00x ONLINE - root@debian:~# send/recv pools send options -R replicate recv options -F Force a rollback of the file system ... (required because bpool_new exists) -d Discard the first element of the sent snapshot's file system name ... -u File system that is associated with the received stream is not mounted. zfs snap -r bpool_old@migrate.2 zfs send -R bpool_old@migrate.2 | mbuffer | zfs recv -F -d -u bpool zfs snap -r rpool_old@migrate.2 zfs send -R rpool_old@migrate.2 | mbuffer | zfs recv -F -d -u rpool root@debian:~# zfs snap -r bpool_old@migrate.2 root@debian:~# zfs send -R bpool_old@migrate.2 | mbuffer | zfs recv -F -d -u bpool in @ 71.9 MiB/s, out @ 71.9 MiB/s, 216 MiB total, buffer 0% full summary: 227 MiByte in 3.4sec - average of 67.8 MiB/s root@debian:~# zfs snap -r rpool_old@migrate.2 root@debian:~# zfs send -R rpool_old@migrate.2 | mbuffer | zfs recv -F -d -u rpool in @ 0.0 kiB/s, out @ 0.0 kiB/s, 24.4 GiB total, buffer 0% fullll summary: 24.4 GiByte in 10min 56.1sec - average of 38.1 MiB/s root@debian:~# Resulting filesystems (and comparison with source pools.) root@debian:~# zfs list -r bpool NAME USED AVAIL REFER MOUNTPOINT bpool 217M 615M 96K /mnt/boot bpool/BOOT 216M 615M 96K none bpool/BOOT/debian 216M 615M 129M /mnt/boot root@debian:~# zfs list -r bpool_old NAME USED AVAIL REFER MOUNTPOINT bpool_old 218M 614M 96K /boot bpool_old/BOOT 216M 614M 96K none bpool_old/BOOT/debian 216M 614M 129M /boot root@debian:~# root@debian:~# zfs list -r rpool -d2 NAME USED AVAIL REFER MOUNTPOINT rpool 16.5G 199G 96K /mnt rpool/ROOT 3.21G 199G 96K none rpool/ROOT/debian 3.21G 199G 2.24G /mnt rpool/home 11.3G 199G 96K /mnt/home rpool/home/hbarta 11.3G 199G 10.9G /mnt/home/hbarta rpool/home/root 908K 199G 264K /mnt/root rpool/srv 96K 199G 96K /mnt/srv rpool/usr 15.0M 199G 96K /mnt/usr rpool/usr/local 14.9M 199G 14.4M /mnt/usr/local rpool/var 1.93G 199G 96K /mnt/var rpool/var/cache 517M 199G 355M /mnt/var/cache rpool/var/games 152K 199G 96K /mnt/var/games rpool/var/lib 1.28G 199G 96K /mnt/var/lib rpool/var/log 148M 199G 98.6M /mnt/var/log rpool/var/mail 152K 199G 96K /mnt/var/mail rpool/var/snap 152K 199G 96K /mnt/var/snap rpool/var/spool 1.75M 199G 436K /mnt/var/spool rpool/var/tmp 768K 199G 120K /mnt/var/tmp rpool/var/www 228K 199G 108K /mnt/var/www root@debian:~# zfs list -r rpool_old -d2 NAME USED AVAIL REFER MOUNTPOINT rpool_old 16.6G 10.6G 96K / rpool_old/ROOT 3.22G 10.6G 96K none rpool_old/ROOT/debian 3.21G 10.6G 2.24G / rpool_old/home 11.3G 10.6G 96K /home rpool_old/home/hbarta 11.3G 10.6G 10.9G /home/hbarta rpool_old/home/root 908K 10.6G 264K /root rpool_old/srv 96K 10.6G 96K /srv rpool_old/usr 15.0M 10.6G 96K /usr rpool_old/usr/local 14.9M 10.6G 14.4M /usr/local rpool_old/var 1.93G 10.6G 96K /var rpool_old/var/cache 517M 10.6G 355M /var/cache rpool_old/var/games 152K 10.6G 96K /var/games rpool_old/var/lib 1.28G 10.6G 96K /var/lib rpool_old/var/log 148M 10.6G 98.6M /var/log rpool_old/var/mail 152K 10.6G 96K /var/mail rpool_old/var/snap 152K 10.6G 96K /var/snap rpool_old/var/spool 1.96M 10.6G 436K /var/spool rpool_old/var/tmp 768K 10.6G 120K /var/tmp rpool_old/var/www 228K 10.6G 108K /var/www root@debian:~# Rescue zpool import shows the original pools still named rpool_old and bpool_old so there is no confusion importing the new pools by name. zpool export -a zpool import -f -N -R /mnt rpool zpool import -f -N -R /mnt bpool zfs load-key -a # if any pools employ native encryption zfs mount rpool/ROOT/debian zfs mount -a Result root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 217M 743M - - 1% 22% 1.00x ONLINE /mnt rpool 222G 16.5G 205G - - 0% 7% 1.00x ONLINE /mnt root@debian:~# df -h Filesystem Size Used Avail Use% Mounted on udev 7.8G 0 7.8G 0% /dev tmpfs 1.6G 1.9M 1.6G 1% /run /dev/mapper/ventoy 3.5G 3.5G 0 100% /run/live/medium /dev/loop0 2.9G 2.9G 0 100% /run/live/rootfs/filesystem.squashfs tmpfs 7.9G 306M 7.6G 4% /run/live/overlay overlay 7.9G 306M 7.6G 4% / tmpfs 7.9G 0 7.9G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock tmpfs 7.9G 8.0K 7.9G 1% /tmp tmpfs 1.6G 176K 1.6G 1% /run/user/1000 /dev/sdh3 94G 20G 70G 22% /media/user/extra rpool/ROOT/debian 201G 2.3G 199G 2% /mnt bpool/BOOT/debian 744M 129M 616M 18% /mnt/boot rpool/srv 199G 128K 199G 1% /mnt/srv rpool/var/cache 199G 355M 199G 1% /mnt/var/cache rpool/home 199G 128K 199G 1% /mnt/home rpool/var/games 199G 128K 199G 1% /mnt/var/games rpool/var/spool 199G 512K 199G 1% /mnt/var/spool rpool/usr/local 199G 15M 199G 1% /mnt/usr/local rpool/var/snap 199G 128K 199G 1% /mnt/var/snap rpool/home/root 199G 384K 199G 1% /mnt/root rpool/var/log 199G 99M 199G 1% /mnt/var/log rpool/var/lib/docker 199G 35M 199G 1% /mnt/var/lib/docker rpool/var/mail 199G 128K 199G 1% /mnt/var/mail rpool/var/lib/AccountsService 199G 128K 199G 1% /mnt/var/lib/AccountsService rpool/var/lib/NetworkManager 199G 128K 199G 1% /mnt/var/lib/NetworkManager rpool/var/tmp 199G 128K 199G 1% /mnt/var/tmp rpool/home/hbarta 210G 11G 199G 6% /mnt/home/hbarta rpool/var/www 199G 128K 199G 1% /mnt/var/www rpool/var/lib/nfs 199G 128K 199G 1% /mnt/var/lib/nfs rpool/home/hbarta/Programming 199G 2.3M 199G 1% /mnt/home/hbarta/Programming root@debian:~# Chroot into new install root@debian:~# mount --make-private --rbind /dev /mnt/dev root@debian:~# mount --make-private --rbind /proc /mnt/proc root@debian:~# mount --make-private --rbind /sys /mnt/sys root@debian:~# mount -t tmpfs tmpfs /mnt/run root@debian:~# mkdir /mnt/run/lock root@debian:~# chroot /mnt /bin/bash --login root@debian:/# mount /boot mount: /boot: can't find in /etc/fstab. root@debian:/# cat /etc/fstab # UNCONFIGURED FSTAB FOR BASE SYSTEM root@debian:/# mount -a seems to have no effect as all filesystems are already mounted. root@debian:/# df| wc -l 24 root@debian:/# mount -a root@debian:/# df| wc -l 24 root@debian:/# root@debian:/# df -h Filesystem Size Used Avail Use% Mounted on rpool/ROOT/debian 201G 2.3G 199G 2% / bpool/BOOT/debian 744M 129M 616M 18% /boot rpool/srv 199G 128K 199G 1% /srv rpool/var/cache 199G 355M 199G 1% /var/cache rpool/home 199G 128K 199G 1% /home rpool/var/games 199G 128K 199G 1% /var/games rpool/var/spool 199G 512K 199G 1% /var/spool rpool/usr/local 199G 15M 199G 1% /usr/local rpool/var/snap 199G 128K 199G 1% /var/snap rpool/home/root 199G 384K 199G 1% /root rpool/var/log 199G 99M 199G 1% /var/log rpool/var/lib/docker 199G 35M 199G 1% /var/lib/docker rpool/var/mail 199G 128K 199G 1% /var/mail rpool/var/lib/AccountsService 199G 128K 199G 1% /var/lib/AccountsService rpool/var/lib/NetworkManager 199G 128K 199G 1% /var/lib/NetworkManager rpool/var/tmp 199G 128K 199G 1% /var/tmp rpool/home/hbarta 210G 11G 199G 6% /home/hbarta rpool/var/www 199G 128K 199G 1% /var/www rpool/var/lib/nfs 199G 128K 199G 1% /var/lib/nfs rpool/home/hbarta/Programming 199G 2.3M 199G 1% /home/hbarta/Programming udev 7.8G 0 7.8G 0% /dev tmpfs 7.9G 0 7.9G 0% /dev/shm tmpfs 7.9G 0 7.9G 0% /run root@debian:/# Perform sensible steps from https://openzfs.github.io/openzfs-docs/Getting%20Started/Debian/Debian%20Bullseye%20Root%20on%20ZFS.html#step-4-system-configuration Confirm that /dev/sdi is the boot device. grub is already installed. zfs-initramfs is already installed. grub-probe /boot reports zfs . update-initramfs -c -k all generates entries for three kernels w/out reporting any problems. update-grub finds the three initrd images and complains about /dev/sdh2 (which is the USB holding the live image.) grub-install /dev/sdi completes without error. Cache files for rpool and bpool exist and have the correct mount points ( /etc/zfs/zfs-list.cache/bpool ands /etc/zfs/zfs-list.cache/rpool ). The cache binary cache file /etc/zfs/zpool.cache appears to have the correct pool name but the wrong drive name. This does not seem to cause any problem. Exit the chroot. Unmount all /mnt/... mounts. zpool export -a exports bpool but not rpool which is apparently a known issue. Power down. Remove live boot media, disconnect the original boot drive(s) and reboot, selecting the new SSD in the BIOS settings. (If the original boot drive is still attached, the system may import the original rpool instead of the new rpool. ) On first boot from the new system, it may be necessary to zpool import -f rpool at the (initramfs) prompt. Alternatives zfs-discuss list user Sam Van den Eynde has described a procedure that does not require booting a live environment and manages the pool renaming issue that I struggled with in their email https://zfsonlinux.topicbox.com/groups/zfs-discuss/T536970860f9f34b4-Mb51bc8a885a9665639d79a13 Errata Despite renaming the pools on the original media, with the new SSD disconnected the original system booted but did not import the boot pool (now listed as bpool_old .) It was manually imported and given the original name name ( bpool ) and was automatically imported on subsequent boots. On the first try to boot the SSD with the original HDD still connected, the original root pool was imported as rpool and the new boot pool was imported as bpool . It seems likely that something in a cache file was pointing to the old root pool and that overrode the rename during the rescue operation.","title":"Debian Root on ZFS to a new drive"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#debian-root-on-zfs-to-a-new-drive","text":"","title":"Debian Root on ZFS to a new drive"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#motivation","text":"Old drives on a file server are old and decrepit and not long for this world.","title":"Motivation"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#contributing","text":"This description is licensed under Creative Commons Zero v1.0 Universal . I appreciate contributions including: pointing out typos identifying descriptions that are ambiguous or otherwise not clear identifying obvious or not so obvious errors or ommisions describing better ways to do any or all of this anything else that improves these instructions Particular areas that would benefit other ways to manage pool renaming usage for systems that employ EFI boot Contributions can be submitted as issues or pull requests or direct contact. I will credit any contributors here. Hank Barta - original version Sam Van den Eynde - clone w/out live environment and get renaming right The actual repo for this document is https://github.com/HankB/MkDocs-blog .","title":"Contributing"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#initial-setup","text":"DEBIAN 11 (Bullseye) with ZFS on root following the instructions at https://openzfs.github.io/openzfs-docs/Getting%20Started/Debian/Debian%20Bullseye%20Root%20on%20ZFS.html#","title":"Initial setup"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#constraints","text":"Old motherboard does not support UEFI boot. Current (target) install is on 500GB mirrored HDDs and using about 7% of capacity. The desire is to migrate to smaller SSDs (240GB SSDs.) Current install uses the bpool / rpool split as specified in the instructions referenced above.","title":"Constraints"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#plan","text":"Format and partition the target SSD as described in the instructions above. Create root and boot pools as described and named to match the original pools: rpool and bpool . zfs send | zfs recv the two filesystems from the existing install to the target SSD. Perform necessary rescue operations to make the target SSD bootable. These operations are being performed on a test system to minimize possible disruption with the \"real\" server until a working procedure is identified.","title":"Plan"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#issues","text":"Pool naming was a continuing problem. With new pools given different names, the cache files were wrong and the pools would not import at boot. This is probably a solvable problem, but the solution eluded me during several tries. The first successful attempt was to create the new pools in the live environment and name them to match the existing (old) pools. The old pools could then be imnported using different names, the related filesystems transferred and the rescue operations completed.","title":"Issues"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#execution-2023-03-10","text":"Boot a Debian 11.6 live ISO (debian-live-11.6.0-amd64-gnome+nonfree.iso) using Ventoy. Install and start openssh-server and go into power settings to disable automatic suspend. Add contrib to /etc/apt/sources.list , updat and install ZFS. Identify the target SSD, in this case /dev/sdi","title":"Execution (2023-03-10)"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#identify-and-secure-erase","text":"root@debian:~# ls -l /dev/disk/by-id/wwn*|grep sdi lrwxrwxrwx 1 root root 9 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c -> ../../sdi lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part1 -> ../../sdi1 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part2 -> ../../sdi2 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part3 -> ../../sdi3 lrwxrwxrwx 1 root root 10 Mar 10 18:18 /dev/disk/by-id/wwn-0x5000c5002ff22a4c-part4 -> ../../sdi4 root@debian:~# DISK=/dev/disk/by-id/wwn-0x5000c5002ff22a4c\\ > root@debian:~# hdparm --security-set-pass NULL $DISK security_password: \"\" /dev/disk/by-id/wwn-0x5000c5002ff22a4c: Issuing SECURITY_SET_PASS command, password=\"\", user=user, mode=high root@debian:~# hdparm --security-erase-enhanced NULL $DISK security_password: \"\" /dev/disk/by-id/wwn-0x5000c5002ff22a4c: Issuing SECURITY_ERASE command, password=\"\", user=user root@debian:~# partprobe root@debian:~# ls -l /dev/disk/by-id/wwn*|grep sdi lrwxrwxrwx 1 root root 9 Mar 10 19:56 /dev/disk/by-id/wwn-0x5000c5002ff22a4c -> ../../sdi root@debian:~#","title":"Identify and secure erase"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#partition","text":"sgdisk -a1 -n1:24K:+1000K -t1:EF02 $DISK sgdisk -n2:1M:+512M -t2:EF00 $DISK sgdisk -n3:0:+1G -t3:BF01 $DISK sgdisk -n4:0:0 -t4:BF00 $DISK sgdisk -p $DISK root@acorn3:~# sgdisk -a1 -n1:24K:+1000K -t1:EF02 $DISK Warning: Partition table header claims that the size of partition table entries is 0 bytes, but this program supports only 128-byte entries. Adjusting accordingly, but partition table may be garbage. Warning: Partition table header claims that the size of partition table entries is 0 bytes, but this program supports only 128-byte entries. Adjusting accordingly, but partition table may be garbage. Creating new GPT entries in memory. Warning: Setting alignment to a value that does not match the disk's physical block size! Performance degradation may result! Physical block size = 4096 Logical block size = 512 Optimal alignment = 8 or multiples thereof. The operation has completed successfully. root@acorn3:~# sgdisk -n2:1M:+512M -t2:EF00 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -n3:0:+1G -t3:BF01 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -n4:0:0 -t4:BF00 $DISK The operation has completed successfully. root@acorn3:~# sgdisk -p $DISK Disk /dev/disk/by-id/wwn-0x5000c5002ff22a4c: 468862128 sectors, 223.6 GiB Sector size (logical/physical): 512/4096 bytes Disk identifier (GUID): ADDCB737-EF88-4B31-80B0-2F3881377244 Partition table holds up to 128 entries Main partition table begins at sector 2 and ends at sector 33 First usable sector is 34, last usable sector is 468862094 Partitions will be aligned on 16-sector boundaries Total free space is 14 sectors (7.0 KiB) Number Start (sector) End (sector) Size Code Name 1 48 2047 1000.0 KiB EF02 2 2048 1050623 512.0 MiB EF00 3 1050624 3147775 1024.0 MiB BF01 4 3147776 468862094 222.1 GiB BF00 root@acorn3:~#","title":"Partition"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#create-pools","text":"zpool create \\ -o ashift=12 \\ -o autotrim=on -d \\ -o cachefile=/etc/zfs/zpool.cache \\ -o feature@async_destroy=enabled \\ -o feature@bookmarks=enabled \\ -o feature@embedded_data=enabled \\ -o feature@empty_bpobj=enabled \\ -o feature@enabled_txg=enabled \\ -o feature@extensible_dataset=enabled \\ -o feature@filesystem_limits=enabled \\ -o feature@hole_birth=enabled \\ -o feature@large_blocks=enabled \\ -o feature@livelist=enabled \\ -o feature@lz4_compress=enabled \\ -o feature@spacemap_histogram=enabled \\ -o feature@zpool_checkpoint=enabled \\ -O devices=off \\ -O acltype=posixacl -O xattr=sa \\ -O compression=lz4 \\ -O normalization=formD \\ -O relatime=on \\ -O canmount=off -O mountpoint=/boot -R /mnt \\ bpool ${DISK}-part3 zpool create \\ -o ashift=12 \\ -o autotrim=on \\ -O acltype=posixacl -O xattr=sa -O dnodesize=auto \\ -O compression=lz4 \\ -O normalization=formD \\ -O relatime=on \\ -O canmount=off -O mountpoint=/ -R /mnt \\ rpool ${DISK}-part4 Result root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 624K 959M - - 0% 0% 1.00x ONLINE /mnt rpool 222G 420K 222G - - 0% 0% 1.00x ONLINE /mnt root@debian:~# zfs list -r NAME USED AVAIL REFER MOUNTPOINT bpool 444K 831M 96K /mnt/boot rpool 420K 215G 96K /mnt root@debian:~#","title":"Create pools"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#import-source-pools","text":"Identify root@debian:~# zpool import ... pool: rpool id: 4536037978216782426 state: ONLINE status: The pool was last accessed by another system. action: The pool can be imported using its name or numeric identifier and the '-f' flag. see: https://openzfs.github.io/openzfs-docs/msg/ZFS-8000-EY config: rpool ONLINE ata-WDC_WD10S21X-24R1BT0-SSHD-8GB_WD-WXA1A74CP57R-part4 ONLINE ... pool: bpool id: 2081542946275218239 state: ONLINE status: The pool was last accessed by another system. action: The pool can be imported using its name or numeric identifier and the '-f' flag. see: https://openzfs.github.io/openzfs-docs/msg/ZFS-8000-EY config: bpool ONLINE ata-WDC_WD10S21X-24R1BT0-SSHD-8GB_WD-WXA1A74CP57R-part3 ONLINE root@debian:~# zpool import -f 4536037978216782426 rpool_old zpool import -f 2081542946275218239 bpool_old root@debian:~# zpool import -f 4536037978216782426 rpool_old root@debian:~# zpool import -f 2081542946275218239 bpool_old root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 624K 959M - - 0% 0% 1.00x ONLINE /mnt bpool_old 960M 218M 742M - - 4% 22% 1.00x ONLINE - rpool 222G 420K 222G - - 0% 0% 1.00x ONLINE /mnt rpool_old 28G 16.5G 11.5G - - 34% 59% 1.00x ONLINE - root@debian:~#","title":"Import source pools"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#sendrecv-pools","text":"send options -R replicate recv options -F Force a rollback of the file system ... (required because bpool_new exists) -d Discard the first element of the sent snapshot's file system name ... -u File system that is associated with the received stream is not mounted. zfs snap -r bpool_old@migrate.2 zfs send -R bpool_old@migrate.2 | mbuffer | zfs recv -F -d -u bpool zfs snap -r rpool_old@migrate.2 zfs send -R rpool_old@migrate.2 | mbuffer | zfs recv -F -d -u rpool root@debian:~# zfs snap -r bpool_old@migrate.2 root@debian:~# zfs send -R bpool_old@migrate.2 | mbuffer | zfs recv -F -d -u bpool in @ 71.9 MiB/s, out @ 71.9 MiB/s, 216 MiB total, buffer 0% full summary: 227 MiByte in 3.4sec - average of 67.8 MiB/s root@debian:~# zfs snap -r rpool_old@migrate.2 root@debian:~# zfs send -R rpool_old@migrate.2 | mbuffer | zfs recv -F -d -u rpool in @ 0.0 kiB/s, out @ 0.0 kiB/s, 24.4 GiB total, buffer 0% fullll summary: 24.4 GiByte in 10min 56.1sec - average of 38.1 MiB/s root@debian:~# Resulting filesystems (and comparison with source pools.) root@debian:~# zfs list -r bpool NAME USED AVAIL REFER MOUNTPOINT bpool 217M 615M 96K /mnt/boot bpool/BOOT 216M 615M 96K none bpool/BOOT/debian 216M 615M 129M /mnt/boot root@debian:~# zfs list -r bpool_old NAME USED AVAIL REFER MOUNTPOINT bpool_old 218M 614M 96K /boot bpool_old/BOOT 216M 614M 96K none bpool_old/BOOT/debian 216M 614M 129M /boot root@debian:~# root@debian:~# zfs list -r rpool -d2 NAME USED AVAIL REFER MOUNTPOINT rpool 16.5G 199G 96K /mnt rpool/ROOT 3.21G 199G 96K none rpool/ROOT/debian 3.21G 199G 2.24G /mnt rpool/home 11.3G 199G 96K /mnt/home rpool/home/hbarta 11.3G 199G 10.9G /mnt/home/hbarta rpool/home/root 908K 199G 264K /mnt/root rpool/srv 96K 199G 96K /mnt/srv rpool/usr 15.0M 199G 96K /mnt/usr rpool/usr/local 14.9M 199G 14.4M /mnt/usr/local rpool/var 1.93G 199G 96K /mnt/var rpool/var/cache 517M 199G 355M /mnt/var/cache rpool/var/games 152K 199G 96K /mnt/var/games rpool/var/lib 1.28G 199G 96K /mnt/var/lib rpool/var/log 148M 199G 98.6M /mnt/var/log rpool/var/mail 152K 199G 96K /mnt/var/mail rpool/var/snap 152K 199G 96K /mnt/var/snap rpool/var/spool 1.75M 199G 436K /mnt/var/spool rpool/var/tmp 768K 199G 120K /mnt/var/tmp rpool/var/www 228K 199G 108K /mnt/var/www root@debian:~# zfs list -r rpool_old -d2 NAME USED AVAIL REFER MOUNTPOINT rpool_old 16.6G 10.6G 96K / rpool_old/ROOT 3.22G 10.6G 96K none rpool_old/ROOT/debian 3.21G 10.6G 2.24G / rpool_old/home 11.3G 10.6G 96K /home rpool_old/home/hbarta 11.3G 10.6G 10.9G /home/hbarta rpool_old/home/root 908K 10.6G 264K /root rpool_old/srv 96K 10.6G 96K /srv rpool_old/usr 15.0M 10.6G 96K /usr rpool_old/usr/local 14.9M 10.6G 14.4M /usr/local rpool_old/var 1.93G 10.6G 96K /var rpool_old/var/cache 517M 10.6G 355M /var/cache rpool_old/var/games 152K 10.6G 96K /var/games rpool_old/var/lib 1.28G 10.6G 96K /var/lib rpool_old/var/log 148M 10.6G 98.6M /var/log rpool_old/var/mail 152K 10.6G 96K /var/mail rpool_old/var/snap 152K 10.6G 96K /var/snap rpool_old/var/spool 1.96M 10.6G 436K /var/spool rpool_old/var/tmp 768K 10.6G 120K /var/tmp rpool_old/var/www 228K 10.6G 108K /var/www root@debian:~#","title":"send/recv pools"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#rescue","text":"zpool import shows the original pools still named rpool_old and bpool_old so there is no confusion importing the new pools by name. zpool export -a zpool import -f -N -R /mnt rpool zpool import -f -N -R /mnt bpool zfs load-key -a # if any pools employ native encryption zfs mount rpool/ROOT/debian zfs mount -a Result root@debian:~# zpool list NAME SIZE ALLOC FREE CKPOINT EXPANDSZ FRAG CAP DEDUP HEALTH ALTROOT bpool 960M 217M 743M - - 1% 22% 1.00x ONLINE /mnt rpool 222G 16.5G 205G - - 0% 7% 1.00x ONLINE /mnt root@debian:~# df -h Filesystem Size Used Avail Use% Mounted on udev 7.8G 0 7.8G 0% /dev tmpfs 1.6G 1.9M 1.6G 1% /run /dev/mapper/ventoy 3.5G 3.5G 0 100% /run/live/medium /dev/loop0 2.9G 2.9G 0 100% /run/live/rootfs/filesystem.squashfs tmpfs 7.9G 306M 7.6G 4% /run/live/overlay overlay 7.9G 306M 7.6G 4% / tmpfs 7.9G 0 7.9G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock tmpfs 7.9G 8.0K 7.9G 1% /tmp tmpfs 1.6G 176K 1.6G 1% /run/user/1000 /dev/sdh3 94G 20G 70G 22% /media/user/extra rpool/ROOT/debian 201G 2.3G 199G 2% /mnt bpool/BOOT/debian 744M 129M 616M 18% /mnt/boot rpool/srv 199G 128K 199G 1% /mnt/srv rpool/var/cache 199G 355M 199G 1% /mnt/var/cache rpool/home 199G 128K 199G 1% /mnt/home rpool/var/games 199G 128K 199G 1% /mnt/var/games rpool/var/spool 199G 512K 199G 1% /mnt/var/spool rpool/usr/local 199G 15M 199G 1% /mnt/usr/local rpool/var/snap 199G 128K 199G 1% /mnt/var/snap rpool/home/root 199G 384K 199G 1% /mnt/root rpool/var/log 199G 99M 199G 1% /mnt/var/log rpool/var/lib/docker 199G 35M 199G 1% /mnt/var/lib/docker rpool/var/mail 199G 128K 199G 1% /mnt/var/mail rpool/var/lib/AccountsService 199G 128K 199G 1% /mnt/var/lib/AccountsService rpool/var/lib/NetworkManager 199G 128K 199G 1% /mnt/var/lib/NetworkManager rpool/var/tmp 199G 128K 199G 1% /mnt/var/tmp rpool/home/hbarta 210G 11G 199G 6% /mnt/home/hbarta rpool/var/www 199G 128K 199G 1% /mnt/var/www rpool/var/lib/nfs 199G 128K 199G 1% /mnt/var/lib/nfs rpool/home/hbarta/Programming 199G 2.3M 199G 1% /mnt/home/hbarta/Programming root@debian:~# Chroot into new install root@debian:~# mount --make-private --rbind /dev /mnt/dev root@debian:~# mount --make-private --rbind /proc /mnt/proc root@debian:~# mount --make-private --rbind /sys /mnt/sys root@debian:~# mount -t tmpfs tmpfs /mnt/run root@debian:~# mkdir /mnt/run/lock root@debian:~# chroot /mnt /bin/bash --login root@debian:/# mount /boot mount: /boot: can't find in /etc/fstab. root@debian:/# cat /etc/fstab # UNCONFIGURED FSTAB FOR BASE SYSTEM root@debian:/# mount -a seems to have no effect as all filesystems are already mounted. root@debian:/# df| wc -l 24 root@debian:/# mount -a root@debian:/# df| wc -l 24 root@debian:/# root@debian:/# df -h Filesystem Size Used Avail Use% Mounted on rpool/ROOT/debian 201G 2.3G 199G 2% / bpool/BOOT/debian 744M 129M 616M 18% /boot rpool/srv 199G 128K 199G 1% /srv rpool/var/cache 199G 355M 199G 1% /var/cache rpool/home 199G 128K 199G 1% /home rpool/var/games 199G 128K 199G 1% /var/games rpool/var/spool 199G 512K 199G 1% /var/spool rpool/usr/local 199G 15M 199G 1% /usr/local rpool/var/snap 199G 128K 199G 1% /var/snap rpool/home/root 199G 384K 199G 1% /root rpool/var/log 199G 99M 199G 1% /var/log rpool/var/lib/docker 199G 35M 199G 1% /var/lib/docker rpool/var/mail 199G 128K 199G 1% /var/mail rpool/var/lib/AccountsService 199G 128K 199G 1% /var/lib/AccountsService rpool/var/lib/NetworkManager 199G 128K 199G 1% /var/lib/NetworkManager rpool/var/tmp 199G 128K 199G 1% /var/tmp rpool/home/hbarta 210G 11G 199G 6% /home/hbarta rpool/var/www 199G 128K 199G 1% /var/www rpool/var/lib/nfs 199G 128K 199G 1% /var/lib/nfs rpool/home/hbarta/Programming 199G 2.3M 199G 1% /home/hbarta/Programming udev 7.8G 0 7.8G 0% /dev tmpfs 7.9G 0 7.9G 0% /dev/shm tmpfs 7.9G 0 7.9G 0% /run root@debian:/# Perform sensible steps from https://openzfs.github.io/openzfs-docs/Getting%20Started/Debian/Debian%20Bullseye%20Root%20on%20ZFS.html#step-4-system-configuration Confirm that /dev/sdi is the boot device. grub is already installed. zfs-initramfs is already installed. grub-probe /boot reports zfs . update-initramfs -c -k all generates entries for three kernels w/out reporting any problems. update-grub finds the three initrd images and complains about /dev/sdh2 (which is the USB holding the live image.) grub-install /dev/sdi completes without error. Cache files for rpool and bpool exist and have the correct mount points ( /etc/zfs/zfs-list.cache/bpool ands /etc/zfs/zfs-list.cache/rpool ). The cache binary cache file /etc/zfs/zpool.cache appears to have the correct pool name but the wrong drive name. This does not seem to cause any problem. Exit the chroot. Unmount all /mnt/... mounts. zpool export -a exports bpool but not rpool which is apparently a known issue. Power down. Remove live boot media, disconnect the original boot drive(s) and reboot, selecting the new SSD in the BIOS settings. (If the original boot drive is still attached, the system may import the original rpool instead of the new rpool. ) On first boot from the new system, it may be necessary to zpool import -f rpool at the (initramfs) prompt.","title":"Rescue"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#alternatives","text":"zfs-discuss list user Sam Van den Eynde has described a procedure that does not require booting a live environment and manages the pool renaming issue that I struggled with in their email https://zfsonlinux.topicbox.com/groups/zfs-discuss/T536970860f9f34b4-Mb51bc8a885a9665639d79a13","title":"Alternatives"},{"location":"tech/Debian_ZFS_on_root_to_a_new_drive/#errata","text":"Despite renaming the pools on the original media, with the new SSD disconnected the original system booted but did not import the boot pool (now listed as bpool_old .) It was manually imported and given the original name name ( bpool ) and was automatically imported on subsequent boots. On the first try to boot the SSD with the original HDD still connected, the original root pool was imported as rpool and the new boot pool was imported as bpool . It seems likely that something in a cache file was pointing to the old root pool and that overrode the rename during the rescue operation.","title":"Errata"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/","text":"Using ESP8266-RTOS-SDK on Debian Motivation ESP8266-RTOS-SDK is not well supported on PlatformIO. https://community.platformio.org/t/vs-code-esp8266-non-rtos-nonos-sdk-project-creation/27091 (PlatformIO provides a very low friction path tp programming a variety of microcontrollers.) Espressif themselves deprecate ESP8266-NONOS-SDK and recommend ESP8266-RTOS-SDK https://github.com/espressif/ESP8266_NONOS_SDK#support-policy-for-esp8266-nonos It seems if one wishes to use Espressif's SDK and tools directly, it should be via the instructions found at https://github.com/espressif/ESP8266_RTOS_SDK#esp8266-rtos-software-development-kit . I found these instructions a bit challenging so I thought it would be useful to work my way through them (blunder my way through) and document what I needed to do to get this working. Overview Install required OS packages and some config. Clone the Espressif Github repo. Run the repo provided install.sh script to install the tools. Build a trial project. Note: The instructions on the web page list downloading build tools and then provide no hint as to where to install them. The install.sh script will do that so there is no need for the user to download build tools separately. Environment This install was performed on a new install of Debian Bullseye, including the Gnome and KDE desktops as well as the SSH server using a non-free netinst image. Commands that require root are preceeded with sudo rather than using # or $ to indicate whether they are user or root commands to make it poossible to copy the entire line and paste it into a terminal window. The SDK requires the following environment variable to get off the ground. export IDF_PATH=~/esp/ESP8266_RTOS_SDK The SDK requires that python run Python 3. On Debian Bullseye this can be accomplished using update-alternatives . (Debian Bullseye does not have an unversioned python program by default.) sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 python --version sudo apt install wget python3-virtualenv python3-pip \\ libncurses-dev flex bison gperf minicom git I configure git with the following commands. (Substitute your preferred characteristics.) git config --global user.name \"<Yourt Name>\" git config --global user.email <your email> git config --global pull.ff only You will need read/write access to the USB device. This can be done by adding the user to the dialout group. sudo usermod -a -G dialout $USER su - $USER (The second command adds the group to the users environment without having to logout.) Cloning ESP8266-RTOS-SDK Espressif's instructions indicate to clone into ~/esp/ mkdir esp cd esp git clone https://github.com/espressif/ESP8266_RTOS_SDK.git This will create ~/esp/ESP8266_RTOS_SDK/ . Install the tool chain export IDF_PATH=~/esp/ESP8266_RTOS_SDK cd ~/esp/ESP8266_RTOS_SDK/ ./install.sh If all goes well, you will see . . . All done! You can now run: . ./export.sh This will have installed the tool chain in ~/.espressif . Sourcing export.sh will report hbarta@yggdrasil:~/esp/ESP8266_RTOS_SDK$ . ./export.sh Adding ESP-IDF tools to PATH... Checking if Python packages are up to date... Python requirements from /home/hbarta/esp/ESP8266_RTOS_SDK/requirements.txt are satisfied. Added the following directories to PATH: /home/hbarta/esp/ESP8266_RTOS_SDK/components/esptool_py/esptool /home/hbarta/esp/ESP8266_RTOS_SDK/components/partition_table/ /home/hbarta/.espressif/tools/xtensa-lx106-elf/esp-2020r3-49-gd5524c1-8.4.0/xtensa-lx106-elf/bin /home/hbarta/.espressif/python_env/rtos3.4_py3.9_env/bin /home/hbarta/esp/ESP8266_RTOS_SDK/tools Done! You can now compile ESP8266-RTOS-SDK projects. Go to the project directory and run: make hbarta@yggdrasil:~/esp/ESP8266_RTOS_SDK$ The hello_world project can then be built cd ./examples/get-started/hello_world make make flash I was unable to get minicom to read the output from /dev/ttyUSB0 at the default baud rate of 74880 and also tried 9600, 19200 and 115200. Contributing Contributions welcome but not limited to Wrong or confusing wording. Additional Linux distros and/or operating systems. Instructions for integrating this with VS Code or other popular IDEs but without PlatformIO. (Or with PlatformIO if that can be managed.) The repo for this page is at https://github.com/HankB/MkDocs-blog/blob/main/tech/ESP8266-RTOS-SDK_on_Debian.md","title":"Using ESP8266-RTOS-SDK on Debian"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#using-esp8266-rtos-sdk-on-debian","text":"","title":"Using ESP8266-RTOS-SDK on Debian"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#motivation","text":"ESP8266-RTOS-SDK is not well supported on PlatformIO. https://community.platformio.org/t/vs-code-esp8266-non-rtos-nonos-sdk-project-creation/27091 (PlatformIO provides a very low friction path tp programming a variety of microcontrollers.) Espressif themselves deprecate ESP8266-NONOS-SDK and recommend ESP8266-RTOS-SDK https://github.com/espressif/ESP8266_NONOS_SDK#support-policy-for-esp8266-nonos It seems if one wishes to use Espressif's SDK and tools directly, it should be via the instructions found at https://github.com/espressif/ESP8266_RTOS_SDK#esp8266-rtos-software-development-kit . I found these instructions a bit challenging so I thought it would be useful to work my way through them (blunder my way through) and document what I needed to do to get this working.","title":"Motivation"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#overview","text":"Install required OS packages and some config. Clone the Espressif Github repo. Run the repo provided install.sh script to install the tools. Build a trial project. Note: The instructions on the web page list downloading build tools and then provide no hint as to where to install them. The install.sh script will do that so there is no need for the user to download build tools separately.","title":"Overview"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#environment","text":"This install was performed on a new install of Debian Bullseye, including the Gnome and KDE desktops as well as the SSH server using a non-free netinst image. Commands that require root are preceeded with sudo rather than using # or $ to indicate whether they are user or root commands to make it poossible to copy the entire line and paste it into a terminal window. The SDK requires the following environment variable to get off the ground. export IDF_PATH=~/esp/ESP8266_RTOS_SDK The SDK requires that python run Python 3. On Debian Bullseye this can be accomplished using update-alternatives . (Debian Bullseye does not have an unversioned python program by default.) sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.9 1 python --version sudo apt install wget python3-virtualenv python3-pip \\ libncurses-dev flex bison gperf minicom git I configure git with the following commands. (Substitute your preferred characteristics.) git config --global user.name \"<Yourt Name>\" git config --global user.email <your email> git config --global pull.ff only You will need read/write access to the USB device. This can be done by adding the user to the dialout group. sudo usermod -a -G dialout $USER su - $USER (The second command adds the group to the users environment without having to logout.)","title":"Environment"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#cloning-esp8266-rtos-sdk","text":"Espressif's instructions indicate to clone into ~/esp/ mkdir esp cd esp git clone https://github.com/espressif/ESP8266_RTOS_SDK.git This will create ~/esp/ESP8266_RTOS_SDK/ .","title":"Cloning ESP8266-RTOS-SDK"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#install-the-tool-chain","text":"export IDF_PATH=~/esp/ESP8266_RTOS_SDK cd ~/esp/ESP8266_RTOS_SDK/ ./install.sh If all goes well, you will see . . . All done! You can now run: . ./export.sh This will have installed the tool chain in ~/.espressif . Sourcing export.sh will report hbarta@yggdrasil:~/esp/ESP8266_RTOS_SDK$ . ./export.sh Adding ESP-IDF tools to PATH... Checking if Python packages are up to date... Python requirements from /home/hbarta/esp/ESP8266_RTOS_SDK/requirements.txt are satisfied. Added the following directories to PATH: /home/hbarta/esp/ESP8266_RTOS_SDK/components/esptool_py/esptool /home/hbarta/esp/ESP8266_RTOS_SDK/components/partition_table/ /home/hbarta/.espressif/tools/xtensa-lx106-elf/esp-2020r3-49-gd5524c1-8.4.0/xtensa-lx106-elf/bin /home/hbarta/.espressif/python_env/rtos3.4_py3.9_env/bin /home/hbarta/esp/ESP8266_RTOS_SDK/tools Done! You can now compile ESP8266-RTOS-SDK projects. Go to the project directory and run: make hbarta@yggdrasil:~/esp/ESP8266_RTOS_SDK$ The hello_world project can then be built cd ./examples/get-started/hello_world make make flash I was unable to get minicom to read the output from /dev/ttyUSB0 at the default baud rate of 74880 and also tried 9600, 19200 and 115200.","title":"Install the tool chain"},{"location":"tech/ESP8266-RTOS-SDK_on_Debian/#contributing","text":"Contributions welcome but not limited to Wrong or confusing wording. Additional Linux distros and/or operating systems. Instructions for integrating this with VS Code or other popular IDEs but without PlatformIO. (Or with PlatformIO if that can be managed.) The repo for this page is at https://github.com/HankB/MkDocs-blog/blob/main/tech/ESP8266-RTOS-SDK_on_Debian.md","title":"Contributing"},{"location":"tech/OWI-535-Robot_Arm_Control_assembly/","text":"OWI-535 Robot Arm Control assembly There were some issues with assembling this part of the kit and these are the steps taken to overcome them. Switch \"wing\" fastening Page 29 Block 2 shows \"switch wings\" being attached to the PCB via through holes and screws that threaded into drilled bosses in the plastic housing. There were two problems completing this assembly. The screws got progressively harder to drive while they still had about 1/8\" (3mm) exposed threads. It is normally a bad idea to continue to drive screws when they force to do so seems excessive. (That can result in broken parts or damaged threads and even broken screws.) While investigating this issue by checking hole depth with a small drill bit, it was discovered that one hole had not been drilled to the required depth. The first step for remediation was to select a drill bit that fit snugly into the holes and mark the required depth with a piece of tape. The hole was carefully drilled to the necessary depth. The screw for that hole was then fully inserted with force that seemed not quite excessive. (In other words, did not require any further techniques.) The second issue was easily avoided by heating the screws with a soldering iron for about 2 seconds to soften the plastic. Start the screws and drive until resistance seemed high (with the threads exposed as above.) Touch the soldering iron to the head of the screw for about 2 seconds. (*) Drive the screw almost the rest of the way in. Excess force while the screw is hot and the plastic soft would rip the threads out. Allow to cool before final tightening of the screws. Control crossover Once assembled the controls were connected to the base unit and the unit exercised. It was found that the two left control levers were cross connected and operating either control resulted on movememt from both motors. The control was disassembled and it appeared that slight scratches in the conformal coating on the printed curtcuit allowed a cross connection between the two switch butterflies for these controls. This was remediated by placing a strip of electrical tape across the area where the butterflies were fastened. It was necessary to remove a small patch of electrical tape around the screw holes to provide contact between the butterfly and printed circuit. With these changes made all motors operated as intended. Some movements resulted in rather loud operation. Motor housings needed to be tightened (close the clamshells) in some cases.","title":"OWI-535 Robot Arm Control assembly"},{"location":"tech/OWI-535-Robot_Arm_Control_assembly/#owi-535-robot-arm-control-assembly","text":"There were some issues with assembling this part of the kit and these are the steps taken to overcome them.","title":"OWI-535 Robot Arm Control assembly"},{"location":"tech/OWI-535-Robot_Arm_Control_assembly/#switch-wing-fastening","text":"Page 29 Block 2 shows \"switch wings\" being attached to the PCB via through holes and screws that threaded into drilled bosses in the plastic housing. There were two problems completing this assembly. The screws got progressively harder to drive while they still had about 1/8\" (3mm) exposed threads. It is normally a bad idea to continue to drive screws when they force to do so seems excessive. (That can result in broken parts or damaged threads and even broken screws.) While investigating this issue by checking hole depth with a small drill bit, it was discovered that one hole had not been drilled to the required depth. The first step for remediation was to select a drill bit that fit snugly into the holes and mark the required depth with a piece of tape. The hole was carefully drilled to the necessary depth. The screw for that hole was then fully inserted with force that seemed not quite excessive. (In other words, did not require any further techniques.) The second issue was easily avoided by heating the screws with a soldering iron for about 2 seconds to soften the plastic. Start the screws and drive until resistance seemed high (with the threads exposed as above.) Touch the soldering iron to the head of the screw for about 2 seconds. (*) Drive the screw almost the rest of the way in. Excess force while the screw is hot and the plastic soft would rip the threads out. Allow to cool before final tightening of the screws.","title":"Switch \"wing\" fastening"},{"location":"tech/OWI-535-Robot_Arm_Control_assembly/#control-crossover","text":"Once assembled the controls were connected to the base unit and the unit exercised. It was found that the two left control levers were cross connected and operating either control resulted on movememt from both motors. The control was disassembled and it appeared that slight scratches in the conformal coating on the printed curtcuit allowed a cross connection between the two switch butterflies for these controls. This was remediated by placing a strip of electrical tape across the area where the butterflies were fastened. It was necessary to remove a small patch of electrical tape around the screw holes to provide contact between the butterfly and printed circuit. With these changes made all motors operated as intended. Some movements resulted in rather loud operation. Motor housings needed to be tightened (close the clamshells) in some cases.","title":"Control crossover"},{"location":"tech/Raspberry-Pi/","text":"Raspberry Pi Pi 4B Almost good enough to be a daily driver. Even overclocked, it can't play Youtube videos full screen smoothly. The main thing that hampers it IMO us the USB attachment to an SSD. I won't run one of these off an SD card as that's just not fast enough. My dream system for the Pi 4 is a compute module with a carrier that supports 4 SATA ports and has enough MMC to boot/root on. I've been preferentially running Debian on the one I use as a desktop. Raspberry Pi OS (R-Pi OS) is good enough for servers but I find the desktop too constraining. And I can't install my preferred desktop - Gnome - due to missing dependencies. I can install KDE and that's a whole 'nother discussion. I bounce back and forth between Bullseye (stable) and Bookworm (testing.) When I get bored of no drama on Bullseye I swap in an SSD that has Bookworm. I've submitted two bug reports so far, one of which was just closed this morning (2022-04-04.) Here are some tips for running Debian on a Pi 4B. The system will suspend just fine but I can't figure out how to unsuspend. The first thing I do on a new install is go into gnome settings and disable suspend. Then I tell Systemd and gnome not to suspend using the following commands. (Seems not to want to suspend with no DE installed.) sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'nothing' gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing' If you install Bookworm, hold the raspi-firmware package until the fixed firmware is in the Testing repo. ( apt-mark hold raspi-firmware ) Or install from experimental. Or install from the tagged version 1.20220331 . The default setting for Ethernet is \"unmanaged.\" It can be controlled using ifdown eth0 / ifup eth0 (but will be on again following the next reboot.) To let NetworkManager control, edit /etc/NetworkManager/NetworkManager.conf and change managed=true to managed=false . I'm not sure this is a complete fix for this issue as Ethernet will be back on the next boot regardless of the setting. Status of Bookworm seems pretty shaky right now. I get frequent loss of connection to the SSD and the only recovery is to pull power. Loss of connection to the SSD can lead to file corruption and may be the reason that my Bookworm installations seem to deteriorate with time. Using an SSD. You will really want a powered USB hub for this. SSDs that worked fine with a Pi 3B may not work well with a 4B because USB 3 supports the faster UAS driver and in turn that causes the SSD to require more power. You can disable UAS using usb-storage.quirks but I prefer the faster faster speed that UAS provides. I use the Wavlink Model: WL-UH3042P1 and power the Pi off the quick charge port. It's rated for 2.4A so I plug other accessories (mouse, keyboard) into the hub along with the SSD to reduce the power demands from the Pi. Overclocking is relatively straight forward. On my Nullseye install I have added the following to /boot/firmware/config.txt arm_freq=2000 over_voltage=6 gpu_freq=750 And have stress tested using a variety of stressers. The CPU temperature goes up to about 82\u00b0C max. I would be concerned if I was running that kind of load at all times, but I'm not. * CPU case. I like the FLIRC cases a lot. Big hunk of aluminum with a molded in protrusion that contacts the CPU through a small pad and does a great job of drawing heat from the processor. It's compoletely passive so it won't stop working if a fan fails because there is no fan needed. Pi Zero, W, 2W and others Overlay FS and unattended-upgrades - No! I use some of these essentially as embedded systems so it seemed natural to employ the Overlay File System (R/O FS, Overlay FS) to reduce SD card failure. I run some of these on really cheap SD cards. I also prefer to keep unattended-upgrades installed to stay current with security upgrades. Unfortunately the two don't mix very well. The Overlay FS \"overlays\" the R/O FS with RAM so when apt-get update runs, it fills RAM with disk changes and results in \"no space on /\". On hosts that I have enabled Overlay RS, I have had to uninstall unattended-upgrades . I should look into PXE boot to see if systems that run from that can stay up to date and of course, not burn up SD cards. Unfortunately WiFi boot is problematic due to the need to establish an association before anything else can happen.","title":"Raspberry Pi"},{"location":"tech/Raspberry-Pi/#raspberry-pi","text":"","title":"Raspberry Pi"},{"location":"tech/Raspberry-Pi/#pi-4b","text":"Almost good enough to be a daily driver. Even overclocked, it can't play Youtube videos full screen smoothly. The main thing that hampers it IMO us the USB attachment to an SSD. I won't run one of these off an SD card as that's just not fast enough. My dream system for the Pi 4 is a compute module with a carrier that supports 4 SATA ports and has enough MMC to boot/root on. I've been preferentially running Debian on the one I use as a desktop. Raspberry Pi OS (R-Pi OS) is good enough for servers but I find the desktop too constraining. And I can't install my preferred desktop - Gnome - due to missing dependencies. I can install KDE and that's a whole 'nother discussion. I bounce back and forth between Bullseye (stable) and Bookworm (testing.) When I get bored of no drama on Bullseye I swap in an SSD that has Bookworm. I've submitted two bug reports so far, one of which was just closed this morning (2022-04-04.) Here are some tips for running Debian on a Pi 4B. The system will suspend just fine but I can't figure out how to unsuspend. The first thing I do on a new install is go into gnome settings and disable suspend. Then I tell Systemd and gnome not to suspend using the following commands. (Seems not to want to suspend with no DE installed.) sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-battery-type 'nothing' gsettings set org.gnome.settings-daemon.plugins.power sleep-inactive-ac-type 'nothing' If you install Bookworm, hold the raspi-firmware package until the fixed firmware is in the Testing repo. ( apt-mark hold raspi-firmware ) Or install from experimental. Or install from the tagged version 1.20220331 . The default setting for Ethernet is \"unmanaged.\" It can be controlled using ifdown eth0 / ifup eth0 (but will be on again following the next reboot.) To let NetworkManager control, edit /etc/NetworkManager/NetworkManager.conf and change managed=true to managed=false . I'm not sure this is a complete fix for this issue as Ethernet will be back on the next boot regardless of the setting. Status of Bookworm seems pretty shaky right now. I get frequent loss of connection to the SSD and the only recovery is to pull power. Loss of connection to the SSD can lead to file corruption and may be the reason that my Bookworm installations seem to deteriorate with time. Using an SSD. You will really want a powered USB hub for this. SSDs that worked fine with a Pi 3B may not work well with a 4B because USB 3 supports the faster UAS driver and in turn that causes the SSD to require more power. You can disable UAS using usb-storage.quirks but I prefer the faster faster speed that UAS provides. I use the Wavlink Model: WL-UH3042P1 and power the Pi off the quick charge port. It's rated for 2.4A so I plug other accessories (mouse, keyboard) into the hub along with the SSD to reduce the power demands from the Pi. Overclocking is relatively straight forward. On my Nullseye install I have added the following to /boot/firmware/config.txt arm_freq=2000 over_voltage=6 gpu_freq=750 And have stress tested using a variety of stressers. The CPU temperature goes up to about 82\u00b0C max. I would be concerned if I was running that kind of load at all times, but I'm not. * CPU case. I like the FLIRC cases a lot. Big hunk of aluminum with a molded in protrusion that contacts the CPU through a small pad and does a great job of drawing heat from the processor. It's compoletely passive so it won't stop working if a fan fails because there is no fan needed.","title":"Pi 4B"},{"location":"tech/Raspberry-Pi/#pi-zero-w-2w-and-others","text":"Overlay FS and unattended-upgrades - No! I use some of these essentially as embedded systems so it seemed natural to employ the Overlay File System (R/O FS, Overlay FS) to reduce SD card failure. I run some of these on really cheap SD cards. I also prefer to keep unattended-upgrades installed to stay current with security upgrades. Unfortunately the two don't mix very well. The Overlay FS \"overlays\" the R/O FS with RAM so when apt-get update runs, it fills RAM with disk changes and results in \"no space on /\". On hosts that I have enabled Overlay RS, I have had to uninstall unattended-upgrades . I should look into PXE boot to see if systems that run from that can stay up to date and of course, not burn up SD cards. Unfortunately WiFi boot is problematic due to the need to establish an association before anything else can happen.","title":"Pi Zero, W, 2W and others"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/","text":"Troubleshooting Debian root on ZFS Motivation I'm sorry to hear that users are having difficulties with Debian root on ZFS. I've been running my laptop that way since I bought it in 2019 and have also converted my desktop to root on ZFS. More recently I've put my server on ZFS root. I can't say this has all been without problems, but I have been able to overcome any difficulties fairly easily. My goal with this document is to identify problems I've encountered and list the solutions I've employed. These notes are focused on inability to boot. I use Debian so the notes are specific to that. Perhaps someone will submit a PR for other Linux distros. Contributions Are welcome for anything from typos and formatting to better information and corrections or additions. Submit as issues, PRs or via direct contact. The repo for this is at https://github.com/HankB/MkDocs-blog TL;DR Rescue Some times all that is needs is to import the pools from a prompt provided within the startup (e.g. enter the root password or hit <ctrl>D to continue I may not have the wording correct, but that is the gist of it.) Enter the root password and then manually import the root and boot pools. I ran into this recently when moving root and boot pools to another drive. It was the (initramfs) prompt and it was not necessary to enter the root password, just type zpool import -f rpool Hit <ctrl>D and the system comes up normally. I don't know why this happens, but the fix is easy. At other times the zfs import command will report that no modules are loaded and attempts to load them do not succeed. This could mean that the initramfs was not rebuilt or the modules themselves ere not rebuilt. Some kind of rescue is needed. Debian leaves the previous kernel in the boot menu and the next thing I do is reboot and select the previous kernel. That should bring up the system with no difficulties. Then I try to rebuild the modules using dpkg-reconfigure zfs-dkms Watch the output from this command to identify potential problems. If there are none, the system should then be able to boot the new kernel. If not, there may be other issues. Id so, read on. Can't load modules This usually means that either the modules were not built for the kernel or the initramfs was not rebuilt for the newer kernel. Usually the command listed above fixes this or helps to identify the problem. Problems I have run into include. kernel headers not installed If kernel headers are installed only for the specific (soon to be previous) kernel version, upgrading the kernel may not install the headers. On my Testing (currently Bookworm) laptop, I see the following headers listed. hbarta@rocinante:~/Documents/MkDocs-blog$ dpkg -l linux-headers* Desired=Unknown/Install/Remove/Purge/Hold | Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend |/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad) ||/ Name Version Architecture Description +++-============================-============-============-========================================================= un linux-headers <none> <none> (no description available) ii linux-headers-6.1.0-5-amd64 6.1.12-1 amd64 Header files for Linux 6.1.0-5-amd64 ii linux-headers-6.1.0-5-common 6.1.12-1 all Common header files for Linux 6.1.0-5 ii linux-headers-6.1.0-6-amd64 6.1.15-1 amd64 Header files for Linux 6.1.0-6-amd64 ii linux-headers-6.1.0-6-common 6.1.15-1 all Common header files for Linux 6.1.0-6 un linux-headers-686-pae <none> <none> (no description available) ii linux-headers-amd64 6.1.15-1 amd64 Header files for Linux amd64 configuration (meta-package) un linux-headers-generic <none> <none> (no description available) hbarta@rocinante:~/Documents/MkDocs-blog$ It is the linux-headers-amd64 package that will pull in the appropriate headers for the next kernel. kernel modules not built This can happen when the kernel ABI changes and the corresponding changes to the ZFS packages have not yet been released. Supported kernel versions for ZFS releases can be viewed at https://github.com/openzfs/zfs/releases . Note: That the modules may still build with an unsupported kernel version but there could be unexpected problems with operation. In this situation it may be possible to try a release that has not yet been packaged for the OS or perhaps even try an unrelease version of ZFS. My personal preference is to wait for the corresponding ZFS package to released and packaged for a new kernel. (This is usually not encountered on Debian Stable as the kernel version is not updated unless one is using a backported kernel.) Raspberry Pi OS does not (often? always?) rebuild the ZFS package, or at least the modules when a kernel is updated. The dpkg-reconfigure zfs-dkms command will fix this. Of course I have not found instructions for rooting Raspberry Pi OS on ZFS but these do exist for Ubuntu.","title":"Troubleshooting Debian root on ZFS"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#troubleshooting-debian-root-on-zfs","text":"","title":"Troubleshooting Debian root on ZFS"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#motivation","text":"I'm sorry to hear that users are having difficulties with Debian root on ZFS. I've been running my laptop that way since I bought it in 2019 and have also converted my desktop to root on ZFS. More recently I've put my server on ZFS root. I can't say this has all been without problems, but I have been able to overcome any difficulties fairly easily. My goal with this document is to identify problems I've encountered and list the solutions I've employed. These notes are focused on inability to boot. I use Debian so the notes are specific to that. Perhaps someone will submit a PR for other Linux distros.","title":"Motivation"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#contributions","text":"Are welcome for anything from typos and formatting to better information and corrections or additions. Submit as issues, PRs or via direct contact. The repo for this is at https://github.com/HankB/MkDocs-blog","title":"Contributions"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#tldr-rescue","text":"Some times all that is needs is to import the pools from a prompt provided within the startup (e.g. enter the root password or hit <ctrl>D to continue I may not have the wording correct, but that is the gist of it.) Enter the root password and then manually import the root and boot pools. I ran into this recently when moving root and boot pools to another drive. It was the (initramfs) prompt and it was not necessary to enter the root password, just type zpool import -f rpool Hit <ctrl>D and the system comes up normally. I don't know why this happens, but the fix is easy. At other times the zfs import command will report that no modules are loaded and attempts to load them do not succeed. This could mean that the initramfs was not rebuilt or the modules themselves ere not rebuilt. Some kind of rescue is needed. Debian leaves the previous kernel in the boot menu and the next thing I do is reboot and select the previous kernel. That should bring up the system with no difficulties. Then I try to rebuild the modules using dpkg-reconfigure zfs-dkms Watch the output from this command to identify potential problems. If there are none, the system should then be able to boot the new kernel. If not, there may be other issues. Id so, read on.","title":"TL;DR Rescue"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#cant-load-modules","text":"This usually means that either the modules were not built for the kernel or the initramfs was not rebuilt for the newer kernel. Usually the command listed above fixes this or helps to identify the problem. Problems I have run into include.","title":"Can't load modules"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#kernel-headers-not-installed","text":"If kernel headers are installed only for the specific (soon to be previous) kernel version, upgrading the kernel may not install the headers. On my Testing (currently Bookworm) laptop, I see the following headers listed. hbarta@rocinante:~/Documents/MkDocs-blog$ dpkg -l linux-headers* Desired=Unknown/Install/Remove/Purge/Hold | Status=Not/Inst/Conf-files/Unpacked/halF-conf/Half-inst/trig-aWait/Trig-pend |/ Err?=(none)/Reinst-required (Status,Err: uppercase=bad) ||/ Name Version Architecture Description +++-============================-============-============-========================================================= un linux-headers <none> <none> (no description available) ii linux-headers-6.1.0-5-amd64 6.1.12-1 amd64 Header files for Linux 6.1.0-5-amd64 ii linux-headers-6.1.0-5-common 6.1.12-1 all Common header files for Linux 6.1.0-5 ii linux-headers-6.1.0-6-amd64 6.1.15-1 amd64 Header files for Linux 6.1.0-6-amd64 ii linux-headers-6.1.0-6-common 6.1.15-1 all Common header files for Linux 6.1.0-6 un linux-headers-686-pae <none> <none> (no description available) ii linux-headers-amd64 6.1.15-1 amd64 Header files for Linux amd64 configuration (meta-package) un linux-headers-generic <none> <none> (no description available) hbarta@rocinante:~/Documents/MkDocs-blog$ It is the linux-headers-amd64 package that will pull in the appropriate headers for the next kernel.","title":"kernel headers not installed"},{"location":"tech/Troubleshooting-Debian-root-on-ZFS/#kernel-modules-not-built","text":"This can happen when the kernel ABI changes and the corresponding changes to the ZFS packages have not yet been released. Supported kernel versions for ZFS releases can be viewed at https://github.com/openzfs/zfs/releases . Note: That the modules may still build with an unsupported kernel version but there could be unexpected problems with operation. In this situation it may be possible to try a release that has not yet been packaged for the OS or perhaps even try an unrelease version of ZFS. My personal preference is to wait for the corresponding ZFS package to released and packaged for a new kernel. (This is usually not encountered on Debian Stable as the kernel version is not updated unless one is using a backported kernel.) Raspberry Pi OS does not (often? always?) rebuild the ZFS package, or at least the modules when a kernel is updated. The dpkg-reconfigure zfs-dkms command will fix this. Of course I have not found instructions for rooting Raspberry Pi OS on ZFS but these do exist for Ubuntu.","title":"kernel modules not built"},{"location":"tech/dphacks-CM4_Ether_Board/","text":"dphacks CM4 Ether Board Expansion board for the Raspberry Pi Compute Module 4 (CM4) that supports Ethernet, USB and PCIe/NVME SSD. This board has kindly been provided for testing by @makerbymistake AKA @rpilocator at https://dphacks.com/ (and IRL Andr\u00e9). Thank you! Board details. USB-C to power the board and CM4 Micro-USB for data with jumper to select host/device mode. In host mode, the board provides 5V to the USB device plugged in (as determined by the USB standard). Device mode is used to flash the eMMC module. (My CM4 is Lite => no eMMC so I cannot test this.) Both the power and data USB ports have basic protection against ESD. Shorting GND and Global_EN pins (with tweezers, etc) causes the CM4 to boot up when turned off or reboot if already running. M.2 M Key slot is powered by 3V (standard for SSDs). An M2 screw is provided that fits into the post. Supported SSD size is 2230. Pictures Comparison to NVME adapter. Ether Board with CM4 + heatsink installed. 2022-10-31 Plans Happy Halloween! I have a CM4 Lite with WiFi and 8GB RAM. I have been testing this with the official R-Pi expansion board (Pi-EB) including booting from NVME. For my Raspberry Pi 4B devices I prefer to use pure Debian but it will not boot the CM4 if anything is connected to the PCIe slot so it is a non-starter. I have an ARM64 R-Pi OS image installed on a 256GB Kioxia (PCIe X1) NVME SSD that I plan to test with. The networking and NVME performance are the things I am most curious about. I may explore other areas such as USB boot and perhaps the connections for shutting down and booting the CM4. Baseline measurements I plan to use iperf3 and some common disk benchmarks to evaluate performance. Before swapping the CM4/heat sink and SSD to the CM4 Ether Board (CM4-EB) I'll complete the benchmarks on the Pi-EB. At this point I generally collect the time to complete the disk benchmarks as a first approximation of performance and will look at the detailed results if anything interesting comes up. Before proceeding I upgraded all available packages and this provides the kernel hbarta@cm4nvme:~ $ uname -a Linux cm4nvme 5.15.74-v8+ #1595 SMP PREEMPT Wed Oct 26 11:07:24 BST 2022 aarch64 GNU/Linux hbarta@cm4nvme:~ $ I have Gnome installed and will disable that for this testing since the CM4-EB has no video output. Before swapping boards the host name was changed to avoid SSH login issues (and my confusion.) sudo hostnamectl set-hostname cm4eb CM4-EB first boot Uneventful. It came up, connected to my LAN via Ethernet and I was able to SSH in. Results of ip addr indicates that WiFi is working as well (though that resides entirely on the CM4.) At present the D2 (green) LED is flickering at about 1/s and the D3 (red) LED is on continuous. On to the benchmarks! Quick reactions - The Ethernet and NVME performance seem pretty close to that on the official IO Board and this is both desired and expected. Benchmark comparison Network board ping iperf3 notes min/avg/max/mdev Mbits/sec snd recv IO 0.146/0.191/0.227/0.024 olive 0.214/0.270/0.551/0.094 924 919 oak EB 0.164/0.204/0.278/0.038 olive 0.213/0.265/0.489/0.075 904 899 oak Disk Crude results - just time to complete the benchmark. Details can be viewed here board fio dd time rerun time IO 101 121 130 EB 101 124 128 2022-11-01 CM4 power switch I implemented the software/config to implement a power switch. Jumper wires used temporarily in place of switch. Instructions at https://www.alexwhittemore.com/raspberry-pi-cm4-using-nrpi_boot/ . Conclusion One of the most important attributes of the CM4 is that it exposes a PCIe lane on the connectors. The official IO Board routes this to a PCIe x1 slot and the @makerbymistake board brings this out directly to an NVME slot. This is an ideal board to use for a headless file server where Ethernet and NVME provide all of the I/O is needed. Other functions that depend only on Ethernet such as Pi-Hole could also be supported at full Gigabit Ethernet speed and all with a footprint a fraction of the space required for the official board. I also like that it is powered from a USB-C connector vs. the barrel used on the official board. I did not test the (micro) USB data connector but I understand that @makerbymistake has used it to run OctoPrint.","title":"dphacks CM4 Ether Board"},{"location":"tech/dphacks-CM4_Ether_Board/#dphacks-cm4-ether-board","text":"Expansion board for the Raspberry Pi Compute Module 4 (CM4) that supports Ethernet, USB and PCIe/NVME SSD. This board has kindly been provided for testing by @makerbymistake AKA @rpilocator at https://dphacks.com/ (and IRL Andr\u00e9). Thank you! Board details. USB-C to power the board and CM4 Micro-USB for data with jumper to select host/device mode. In host mode, the board provides 5V to the USB device plugged in (as determined by the USB standard). Device mode is used to flash the eMMC module. (My CM4 is Lite => no eMMC so I cannot test this.) Both the power and data USB ports have basic protection against ESD. Shorting GND and Global_EN pins (with tweezers, etc) causes the CM4 to boot up when turned off or reboot if already running. M.2 M Key slot is powered by 3V (standard for SSDs). An M2 screw is provided that fits into the post. Supported SSD size is 2230.","title":"dphacks CM4 Ether Board"},{"location":"tech/dphacks-CM4_Ether_Board/#pictures","text":"Comparison to NVME adapter. Ether Board with CM4 + heatsink installed.","title":"Pictures"},{"location":"tech/dphacks-CM4_Ether_Board/#2022-10-31-plans","text":"Happy Halloween! I have a CM4 Lite with WiFi and 8GB RAM. I have been testing this with the official R-Pi expansion board (Pi-EB) including booting from NVME. For my Raspberry Pi 4B devices I prefer to use pure Debian but it will not boot the CM4 if anything is connected to the PCIe slot so it is a non-starter. I have an ARM64 R-Pi OS image installed on a 256GB Kioxia (PCIe X1) NVME SSD that I plan to test with. The networking and NVME performance are the things I am most curious about. I may explore other areas such as USB boot and perhaps the connections for shutting down and booting the CM4.","title":"2022-10-31 Plans"},{"location":"tech/dphacks-CM4_Ether_Board/#baseline-measurements","text":"I plan to use iperf3 and some common disk benchmarks to evaluate performance. Before swapping the CM4/heat sink and SSD to the CM4 Ether Board (CM4-EB) I'll complete the benchmarks on the Pi-EB. At this point I generally collect the time to complete the disk benchmarks as a first approximation of performance and will look at the detailed results if anything interesting comes up. Before proceeding I upgraded all available packages and this provides the kernel hbarta@cm4nvme:~ $ uname -a Linux cm4nvme 5.15.74-v8+ #1595 SMP PREEMPT Wed Oct 26 11:07:24 BST 2022 aarch64 GNU/Linux hbarta@cm4nvme:~ $ I have Gnome installed and will disable that for this testing since the CM4-EB has no video output. Before swapping boards the host name was changed to avoid SSH login issues (and my confusion.) sudo hostnamectl set-hostname cm4eb","title":"Baseline measurements"},{"location":"tech/dphacks-CM4_Ether_Board/#cm4-eb-first-boot","text":"Uneventful. It came up, connected to my LAN via Ethernet and I was able to SSH in. Results of ip addr indicates that WiFi is working as well (though that resides entirely on the CM4.) At present the D2 (green) LED is flickering at about 1/s and the D3 (red) LED is on continuous. On to the benchmarks! Quick reactions - The Ethernet and NVME performance seem pretty close to that on the official IO Board and this is both desired and expected.","title":"CM4-EB first boot"},{"location":"tech/dphacks-CM4_Ether_Board/#benchmark-comparison","text":"","title":"Benchmark comparison"},{"location":"tech/dphacks-CM4_Ether_Board/#network","text":"board ping iperf3 notes min/avg/max/mdev Mbits/sec snd recv IO 0.146/0.191/0.227/0.024 olive 0.214/0.270/0.551/0.094 924 919 oak EB 0.164/0.204/0.278/0.038 olive 0.213/0.265/0.489/0.075 904 899 oak","title":"Network"},{"location":"tech/dphacks-CM4_Ether_Board/#disk","text":"Crude results - just time to complete the benchmark. Details can be viewed here board fio dd time rerun time IO 101 121 130 EB 101 124 128","title":"Disk"},{"location":"tech/dphacks-CM4_Ether_Board/#2022-11-01-cm4-power-switch","text":"I implemented the software/config to implement a power switch. Jumper wires used temporarily in place of switch. Instructions at https://www.alexwhittemore.com/raspberry-pi-cm4-using-nrpi_boot/ .","title":"2022-11-01 CM4 power switch"},{"location":"tech/dphacks-CM4_Ether_Board/#conclusion","text":"One of the most important attributes of the CM4 is that it exposes a PCIe lane on the connectors. The official IO Board routes this to a PCIe x1 slot and the @makerbymistake board brings this out directly to an NVME slot. This is an ideal board to use for a headless file server where Ethernet and NVME provide all of the I/O is needed. Other functions that depend only on Ethernet such as Pi-Hole could also be supported at full Gigabit Ethernet speed and all with a footprint a fraction of the space required for the official board. I also like that it is powered from a USB-C connector vs. the barrel used on the official board. I did not test the (micro) USB data connector but I understand that @makerbymistake has used it to run OctoPrint.","title":"Conclusion"},{"location":"tech/data/benchmarks/","text":"CM4 benchmarks Results with the Raspberry Pi IO Board and CM4 Ether Board. 2022-10-31 Pi IO Board ping hbarta@cm4nvme:~ $ ping -c 10 olive ... --- olive.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9042ms rtt min/avg/max/mdev = 0.146/0.191/0.227/0.024 ms hbarta@cm4nvme:~ $ hbarta@cm4nvme:~ $ hbarta@cm4nvme:~ $ ping -c 10 oak ... --- oak.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9030ms rtt min/avg/max/mdev = 0.214/0.270/0.551/0.094 ms hbarta@cm4nvme:~ $ iperf iperf3 -s running on the server oak hbarta@cm4nvme:~ $ iperf3 -c oak --get-server-output --bidir Connecting to host oak, port 5201 ... [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][TX-C] 0.00-1.00 sec 112 MBytes 937 Mbits/sec 0 594 KBytes [ 7][RX-C] 0.00-1.00 sec 109 MBytes 912 Mbits/sec [ 5][TX-C] 1.00-2.00 sec 111 MBytes 933 Mbits/sec 0 658 KBytes [ 7][RX-C] 1.00-2.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 2.00-3.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 2.00-3.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 3.00-4.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 3.00-4.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 4.00-5.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 4.00-5.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 5.00-6.00 sec 110 MBytes 923 Mbits/sec 0 762 KBytes [ 7][RX-C] 5.00-6.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 6.00-7.00 sec 110 MBytes 923 Mbits/sec 0 762 KBytes [ 7][RX-C] 6.00-7.00 sec 112 MBytes 938 Mbits/sec [ 5][TX-C] 7.00-8.00 sec 109 MBytes 912 Mbits/sec 0 800 KBytes [ 7][RX-C] 7.00-8.00 sec 111 MBytes 933 Mbits/sec [ 5][TX-C] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 0 880 KBytes [ 7][RX-C] 8.00-9.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 9.00-10.00 sec 110 MBytes 923 Mbits/sec 0 880 KBytes [ 7][RX-C] 9.00-10.00 sec 112 MBytes 937 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][TX-C] 0.00-10.00 sec 1.08 GBytes 924 Mbits/sec 0 sender [ 5][TX-C] 0.00-10.03 sec 1.07 GBytes 919 Mbits/sec receiver Server output: ----------------------------------------------------------- Server listening on 5201 ----------------------------------------------------------- ... [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][RX-S] 0.00-1.00 sec 106 MBytes 890 Mbits/sec [ 8][TX-S] 0.00-1.00 sec 108 MBytes 903 Mbits/sec 0 576 KBytes [ 5][RX-S] 1.00-2.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 1.00-2.00 sec 112 MBytes 943 Mbits/sec 0 576 KBytes [ 5][RX-S] 2.00-3.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 2.00-3.00 sec 112 MBytes 937 Mbits/sec 0 604 KBytes [ 5][RX-S] 3.00-4.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 3.00-4.00 sec 112 MBytes 938 Mbits/sec 0 604 KBytes [ 5][RX-S] 4.00-5.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 4.00-5.00 sec 112 MBytes 938 Mbits/sec 0 604 KBytes [ 5][RX-S] 5.00-6.00 sec 110 MBytes 924 Mbits/sec [ 8][TX-S] 5.00-6.00 sec 111 MBytes 931 Mbits/sec 0 666 KBytes [ 5][RX-S] 6.00-7.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 6.00-7.00 sec 112 MBytes 944 Mbits/sec 0 666 KBytes [ 5][RX-S] 7.00-8.00 sec 110 MBytes 919 Mbits/sec [ 8][TX-S] 7.00-8.00 sec 111 MBytes 933 Mbits/sec 0 1.14 MBytes [ 5][RX-S] 8.00-9.00 sec 110 MBytes 920 Mbits/sec [ 8][TX-S] 8.00-9.00 sec 111 MBytes 933 Mbits/sec 0 1.26 MBytes [ 5][RX-S] 9.00-10.00 sec 110 MBytes 920 Mbits/sec [ 8][TX-S] 9.00-10.00 sec 111 MBytes 933 Mbits/sec 0 1.26 MBytes [ 5][RX-S] 10.00-10.03 sec 3.59 MBytes 919 Mbits/sec [ 8][TX-S] 10.00-10.03 sec 3.75 MBytes 961 Mbits/sec 0 1.26 MBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][RX-S] 0.00-10.03 sec 1.07 GBytes 919 Mbits/sec receiver [ 8][TX-S] 0.00-10.03 sec 1.09 GBytes 933 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.00 sec 1.09 GBytes 936 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.03 sec 1.09 GBytes 931 Mbits/sec receiver iperf Done. hbarta@cm4nvme:~ $ fio time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 EXT4 hbarta@cm4nvme:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 Pi-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 Pi-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=38.3MiB/s,w=12.4MiB/s][r=9801,w=3178 IOPS][eta 00m:00s] CM4 Pi-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1445: Mon Oct 31 10:20:32 2022 read: IOPS=9489, BW=37.1MiB/s (38.9MB/s)(3070MiB/82821msec) bw ( KiB/s): min= 4728, max=40432, per=100.00%, avg=37980.56, stdev=5866.60, samples=165 iops : min= 1182, max=10108, avg=9495.14, stdev=1466.65, samples=165 write: IOPS=3171, BW=12.4MiB/s (12.0MB/s)(1026MiB/82821msec); 0 zone resets bw ( KiB/s): min= 1480, max=14096, per=100.00%, avg=12694.01, stdev=2011.83, samples=165 iops : min= 370, max= 3524, avg=3173.50, stdev=502.96, samples=165 cpu : usr=6.20%, sys=29.42%, ctx=787488, majf=0, minf=17 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=37.1MiB/s (38.9MB/s), 37.1MiB/s-37.1MiB/s (38.9MB/s-38.9MB/s), io=3070MiB (3219MB), run=82821-82821msec WRITE: bw=12.4MiB/s (12.0MB/s), 12.4MiB/s-12.4MiB/s (12.0MB/s-12.0MB/s), io=1026MiB (1076MB), run=82821-82821msec Disk stats (read/write): nvme0n1: ios=784533/186940, merge=0/54, ticks=57364/359411, in_queue=416789, util=99.98% real 100.79 user 7.70 sys 38.06 hbarta@cm4nvme:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 Pi-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process Jobs: 1 (f=1): [m(1)][100.0%][r=25.5MiB/s,w=8832KiB/s][r=6531,w=2208 IOPS][eta 00m:00s] CM4 Pi-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1454: Mon Oct 31 10:24:53 2022 read: IOPS=6503, BW=25.4MiB/s (26.6MB/s)(3070MiB/120854msec) bw ( KiB/s): min= 4608, max=31464, per=100.00%, avg=26473.72, stdev=3710.27, samples=237 iops : min= 1152, max= 7866, avg=6618.44, stdev=927.58, samples=237 write: IOPS=2173, BW=8693KiB/s (8902kB/s)(1026MiB/120854msec); 0 zone resets bw ( KiB/s): min= 1752, max=11112, per=100.00%, avg=8847.19, stdev=1268.95, samples=237 iops : min= 438, max= 2778, avg=2211.80, stdev=317.24, samples=237 cpu : usr=6.21%, sys=30.13%, ctx=786638, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=25.4MiB/s (26.6MB/s), 25.4MiB/s-25.4MiB/s (26.6MB/s-26.6MB/s), io=3070MiB (3219MB), run=120854-120854msec WRITE: bw=8693KiB/s (8902kB/s), 8693KiB/s-8693KiB/s (8902kB/s-8902kB/s), io=1026MiB (1076MB), run=120854-120854msec Disk stats (read/write): nvme0n1: ios=784370/194729, merge=0/24, ticks=83268/359720, in_queue=443006, util=98.19% real 121.10 user 7.75 sys 36.82 hbarta@cm4nvme:~ $ Mildly interesting that the second run took 20% longer. Perhaps that is becauee the test file test.dat was reused. It will be removed manually for further testing. Or maybe not. Perhaps it will be useful to duplicate the initial ocnditions ( test.dat present or absent.) ZFS hbarta@cm4nvme:/mnt/pool $ zpool list The ZFS modules are not loaded. Try running '/sbin/modprobe zfs' as root to load them. hbarta@cm4nvme:/mnt/pool $ /sbin/modprobe zfs modprobe: FATAL: Module zfs not found in directory /lib/modules/5.15.74-v8+ hbarta@cm4nvme:/mnt/pool $ Kernel update did not build the modules (though no DKMS errors were observed) so ZFS testing will not be performed at this time. dd Performed using this script hbarta@cm4nvme:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 36.0792 s, 119 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0287 s, 389 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.5971 s, 209 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 29.0112 s, 148 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0306 s, 389 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0704 s, 388 MB/s real 129.61 user 0.19 sys 96.71 hbarta@cm4nvme:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 38.493 s, 112 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.1339 s, 386 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.2999 s, 212 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 29.0837 s, 148 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0611 s, 388 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0786 s, 388 MB/s real 129.96 user 0.18 sys 95.28 hbarta@cm4nvme:~ $ 2022-10-31 CM4 Ether Board ping hbarta@cm4eb:~ $ ping -c 10 oak --- oak.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9052ms rtt min/avg/max/mdev = 0.213/0.265/0.489/0.075 ms hbarta@cm4eb:~ $ hbarta@cm4eb:~ $ hbarta@cm4eb:~ $ ping -c 10 olive --- olive.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9092ms rtt min/avg/max/mdev = 0.164/0.204/0.278/0.038 ms hbarta@cm4eb:~ $ iperf hbarta@cm4eb:~ $ iperf3 -c oak --get-server-output --bidir Connecting to host oak, port 5201 [ 5] local 192.168.1.45 port 57144 connected to 192.168.1.80 port 5201 [ 7] local 192.168.1.45 port 57146 connected to 192.168.1.80 port 5201 [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][TX-C] 0.00-1.00 sec 110 MBytes 926 Mbits/sec 0 669 KBytes [ 7][RX-C] 0.00-1.00 sec 110 MBytes 923 Mbits/sec [ 5][TX-C] 1.00-2.00 sec 110 MBytes 923 Mbits/sec 0 701 KBytes [ 7][RX-C] 1.00-2.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 2.00-3.00 sec 108 MBytes 902 Mbits/sec 0 701 KBytes [ 7][RX-C] 2.00-3.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 3.00-4.00 sec 106 MBytes 891 Mbits/sec 0 701 KBytes [ 7][RX-C] 3.00-4.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 4.00-5.00 sec 109 MBytes 912 Mbits/sec 0 701 KBytes [ 7][RX-C] 4.00-5.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 5.00-6.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 5.00-6.00 sec 112 MBytes 938 Mbits/sec [ 5][TX-C] 6.00-7.00 sec 109 MBytes 912 Mbits/sec 0 809 KBytes [ 7][RX-C] 6.00-7.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 7.00-8.00 sec 108 MBytes 902 Mbits/sec 0 809 KBytes [ 7][RX-C] 7.00-8.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 8.00-9.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 8.00-9.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 9.00-10.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 9.00-10.00 sec 112 MBytes 936 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][TX-C] 0.00-10.00 sec 1.05 GBytes 904 Mbits/sec 0 sender [ 5][TX-C] 0.00-10.03 sec 1.05 GBytes 899 Mbits/sec receiver Server output: ----------------------------------------------------------- Server listening on 5201 ----------------------------------------------------------- Accepted connection from 192.168.1.45, port 57132 [ 5] local 192.168.1.80 port 5201 connected to 192.168.1.45 port 57144 [ 8] local 192.168.1.80 port 5201 connected to 192.168.1.45 port 57146 [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][RX-S] 0.00-1.00 sec 104 MBytes 875 Mbits/sec [ 8][TX-S] 0.00-1.00 sec 109 MBytes 912 Mbits/sec 0 484 KBytes [ 5][RX-S] 1.00-2.00 sec 109 MBytes 915 Mbits/sec [ 8][TX-S] 1.00-2.00 sec 112 MBytes 936 Mbits/sec 0 484 KBytes [ 5][RX-S] 2.00-3.00 sec 108 MBytes 910 Mbits/sec [ 8][TX-S] 2.00-3.00 sec 112 MBytes 940 Mbits/sec 0 484 KBytes [ 5][RX-S] 3.00-4.00 sec 105 MBytes 883 Mbits/sec [ 8][TX-S] 3.00-4.00 sec 112 MBytes 940 Mbits/sec 0 587 KBytes [ 5][RX-S] 4.00-5.00 sec 109 MBytes 915 Mbits/sec [ 8][TX-S] 4.00-5.00 sec 111 MBytes 934 Mbits/sec 0 587 KBytes [ 5][RX-S] 5.00-6.00 sec 106 MBytes 892 Mbits/sec [ 8][TX-S] 5.00-6.00 sec 112 MBytes 939 Mbits/sec 0 649 KBytes [ 5][RX-S] 6.00-7.00 sec 109 MBytes 912 Mbits/sec [ 8][TX-S] 6.00-7.00 sec 112 MBytes 944 Mbits/sec 0 682 KBytes [ 5][RX-S] 7.00-8.00 sec 108 MBytes 906 Mbits/sec [ 8][TX-S] 7.00-8.00 sec 111 MBytes 933 Mbits/sec 0 682 KBytes [ 5][RX-S] 8.00-9.00 sec 106 MBytes 888 Mbits/sec [ 8][TX-S] 8.00-9.00 sec 111 MBytes 933 Mbits/sec 0 714 KBytes [ 5][RX-S] 9.00-10.00 sec 107 MBytes 896 Mbits/sec [ 8][TX-S] 9.00-10.00 sec 112 MBytes 944 Mbits/sec 0 714 KBytes [ 5][RX-S] 10.00-10.03 sec 2.82 MBytes 702 Mbits/sec [ 8][TX-S] 10.00-10.03 sec 2.50 MBytes 623 Mbits/sec 0 714 KBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][RX-S] 0.00-10.03 sec 1.05 GBytes 899 Mbits/sec receiver [ 8][TX-S] 0.00-10.03 sec 1.09 GBytes 934 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.00 sec 1.09 GBytes 938 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.03 sec 1.09 GBytes 932 Mbits/sec receiver iperf Done. hbarta@cm4eb:~ $ fio time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 EXT4 hbarta@cm4eb:~ $ rm test.dat hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 CM4-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=38.7MiB/s,w=12.7MiB/s][r=9904,w=3255 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=967: Mon Oct 31 11:14:36 2022 read: IOPS=9503, BW=37.1MiB/s (38.9MB/s)(3070MiB/82699msec) bw ( KiB/s): min= 4552, max=40616, per=100.00%, avg=38038.98, stdev=5865.13, samples=165 iops : min= 1138, max=10154, avg=9509.75, stdev=1466.28, samples=165 write: IOPS=3176, BW=12.4MiB/s (13.0MB/s)(1026MiB/82699msec); 0 zone resets bw ( KiB/s): min= 1408, max=14064, per=100.00%, avg=12712.82, stdev=2002.01, samples=165 iops : min= 352, max= 3516, avg=3178.21, stdev=500.50, samples=165 cpu : usr=6.22%, sys=28.68%, ctx=786082, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=37.1MiB/s (38.9MB/s), 37.1MiB/s-37.1MiB/s (38.9MB/s-38.9MB/s), io=3070MiB (3219MB), run=82699-82699msec WRITE: bw=12.4MiB/s (13.0MB/s), 12.4MiB/s-12.4MiB/s (13.0MB/s-13.0MB/s), io=1026MiB (1076MB), run=82699-82699msec Disk stats (read/write): nvme0n1: ios=784602/182270, merge=0/31, ticks=58219/354448, in_queue=412680, util=99.98% real 100.77 user 7.92 sys 37.13 hbarta@cm4eb:~ $ rm test.dat hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 CM4-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=37.0MiB/s,w=12.4MiB/s][r=9726,w=3163 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=997: Mon Oct 31 11:20:01 2022 read: IOPS=9388, BW=36.7MiB/s (38.5MB/s)(3070MiB/83711msec) bw ( KiB/s): min= 5328, max=39760, per=100.00%, avg=37579.33, stdev=5716.81, samples=167 iops : min= 1332, max= 9940, avg=9394.83, stdev=1429.20, samples=167 write: IOPS=3137, BW=12.3MiB/s (12.9MB/s)(1026MiB/83711msec); 0 zone resets bw ( KiB/s): min= 1696, max=14216, per=100.00%, avg=12559.37, stdev=1933.30, samples=167 iops : min= 424, max= 3554, avg=3139.84, stdev=483.33, samples=167 cpu : usr=6.12%, sys=28.49%, ctx=786601, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=36.7MiB/s (38.5MB/s), 36.7MiB/s-36.7MiB/s (38.5MB/s-38.5MB/s), io=3070MiB (3219MB), run=83711-83711msec WRITE: bw=12.3MiB/s (12.9MB/s), 12.3MiB/s-12.3MiB/s (12.9MB/s-12.9MB/s), io=1026MiB (1076MB), run=83711-83711msec Disk stats (read/write): nvme0n1: ios=785014/183588, merge=0/39, ticks=59125/355769, in_queue=414907, util=99.97% real 101.18 user 7.66 sys 37.39 hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process Jobs: 1 (f=0): [f(1)][100.0%][r=26.3MiB/s,w=9125KiB/s][r=6721,w=2281 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1005: Mon Oct 31 11:23:30 2022 read: IOPS=6370, BW=24.9MiB/s (26.1MB/s)(3070MiB/123374msec) bw ( KiB/s): min= 4960, max=31176, per=100.00%, avg=25924.49, stdev=3414.66, samples=242 iops : min= 1240, max= 7794, avg=6481.11, stdev=853.67, samples=242 write: IOPS=2128, BW=8516KiB/s (8720kB/s)(1026MiB/123374msec); 0 zone resets bw ( KiB/s): min= 1688, max=11048, per=100.00%, avg=8663.99, stdev=1195.96, samples=242 iops : min= 422, max= 2762, avg=2165.99, stdev=299.00, samples=242 cpu : usr=6.33%, sys=30.71%, ctx=787064, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=24.9MiB/s (26.1MB/s), 24.9MiB/s-24.9MiB/s (26.1MB/s-26.1MB/s), io=3070MiB (3219MB), run=123374-123374msec WRITE: bw=8516KiB/s (8720kB/s), 8516KiB/s-8516KiB/s (8720kB/s-8720kB/s), io=1026MiB (1076MB), run=123374-123374msec Disk stats (read/write): nvme0n1: ios=784242/187524, merge=0/26, ticks=84336/348551, in_queue=432907, util=98.25% real 123.61 user 8.05 sys 38.36 hbarta@cm4eb:~ $ dd hbarta@cm4eb:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 35.2099 s, 122 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0149 s, 390 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.8811 s, 206 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 28.4665 s, 151 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 10.9412 s, 393 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.003 s, 390 MB/s real 128.19 user 0.18 sys 96.20 hbarta@cm4eb:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 37.4447 s, 115 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.1124 s, 387 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.1235 s, 213 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 28.0601 s, 153 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 10.9816 s, 391 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0046 s, 390 MB/s real 127.75 user 0.26 sys 94.75 hbarta@cm4eb:~ $","title":"CM4 benchmarks"},{"location":"tech/data/benchmarks/#cm4-benchmarks","text":"Results with the Raspberry Pi IO Board and CM4 Ether Board.","title":"CM4 benchmarks"},{"location":"tech/data/benchmarks/#2022-10-31-pi-io-board","text":"","title":"2022-10-31 Pi IO Board"},{"location":"tech/data/benchmarks/#ping","text":"hbarta@cm4nvme:~ $ ping -c 10 olive ... --- olive.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9042ms rtt min/avg/max/mdev = 0.146/0.191/0.227/0.024 ms hbarta@cm4nvme:~ $ hbarta@cm4nvme:~ $ hbarta@cm4nvme:~ $ ping -c 10 oak ... --- oak.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9030ms rtt min/avg/max/mdev = 0.214/0.270/0.551/0.094 ms hbarta@cm4nvme:~ $","title":"ping"},{"location":"tech/data/benchmarks/#iperf","text":"iperf3 -s running on the server oak hbarta@cm4nvme:~ $ iperf3 -c oak --get-server-output --bidir Connecting to host oak, port 5201 ... [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][TX-C] 0.00-1.00 sec 112 MBytes 937 Mbits/sec 0 594 KBytes [ 7][RX-C] 0.00-1.00 sec 109 MBytes 912 Mbits/sec [ 5][TX-C] 1.00-2.00 sec 111 MBytes 933 Mbits/sec 0 658 KBytes [ 7][RX-C] 1.00-2.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 2.00-3.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 2.00-3.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 3.00-4.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 3.00-4.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 4.00-5.00 sec 110 MBytes 923 Mbits/sec 0 690 KBytes [ 7][RX-C] 4.00-5.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 5.00-6.00 sec 110 MBytes 923 Mbits/sec 0 762 KBytes [ 7][RX-C] 5.00-6.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 6.00-7.00 sec 110 MBytes 923 Mbits/sec 0 762 KBytes [ 7][RX-C] 6.00-7.00 sec 112 MBytes 938 Mbits/sec [ 5][TX-C] 7.00-8.00 sec 109 MBytes 912 Mbits/sec 0 800 KBytes [ 7][RX-C] 7.00-8.00 sec 111 MBytes 933 Mbits/sec [ 5][TX-C] 8.00-9.00 sec 110 MBytes 923 Mbits/sec 0 880 KBytes [ 7][RX-C] 8.00-9.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 9.00-10.00 sec 110 MBytes 923 Mbits/sec 0 880 KBytes [ 7][RX-C] 9.00-10.00 sec 112 MBytes 937 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][TX-C] 0.00-10.00 sec 1.08 GBytes 924 Mbits/sec 0 sender [ 5][TX-C] 0.00-10.03 sec 1.07 GBytes 919 Mbits/sec receiver Server output: ----------------------------------------------------------- Server listening on 5201 ----------------------------------------------------------- ... [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][RX-S] 0.00-1.00 sec 106 MBytes 890 Mbits/sec [ 8][TX-S] 0.00-1.00 sec 108 MBytes 903 Mbits/sec 0 576 KBytes [ 5][RX-S] 1.00-2.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 1.00-2.00 sec 112 MBytes 943 Mbits/sec 0 576 KBytes [ 5][RX-S] 2.00-3.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 2.00-3.00 sec 112 MBytes 937 Mbits/sec 0 604 KBytes [ 5][RX-S] 3.00-4.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 3.00-4.00 sec 112 MBytes 938 Mbits/sec 0 604 KBytes [ 5][RX-S] 4.00-5.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 4.00-5.00 sec 112 MBytes 938 Mbits/sec 0 604 KBytes [ 5][RX-S] 5.00-6.00 sec 110 MBytes 924 Mbits/sec [ 8][TX-S] 5.00-6.00 sec 111 MBytes 931 Mbits/sec 0 666 KBytes [ 5][RX-S] 6.00-7.00 sec 110 MBytes 923 Mbits/sec [ 8][TX-S] 6.00-7.00 sec 112 MBytes 944 Mbits/sec 0 666 KBytes [ 5][RX-S] 7.00-8.00 sec 110 MBytes 919 Mbits/sec [ 8][TX-S] 7.00-8.00 sec 111 MBytes 933 Mbits/sec 0 1.14 MBytes [ 5][RX-S] 8.00-9.00 sec 110 MBytes 920 Mbits/sec [ 8][TX-S] 8.00-9.00 sec 111 MBytes 933 Mbits/sec 0 1.26 MBytes [ 5][RX-S] 9.00-10.00 sec 110 MBytes 920 Mbits/sec [ 8][TX-S] 9.00-10.00 sec 111 MBytes 933 Mbits/sec 0 1.26 MBytes [ 5][RX-S] 10.00-10.03 sec 3.59 MBytes 919 Mbits/sec [ 8][TX-S] 10.00-10.03 sec 3.75 MBytes 961 Mbits/sec 0 1.26 MBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][RX-S] 0.00-10.03 sec 1.07 GBytes 919 Mbits/sec receiver [ 8][TX-S] 0.00-10.03 sec 1.09 GBytes 933 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.00 sec 1.09 GBytes 936 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.03 sec 1.09 GBytes 931 Mbits/sec receiver iperf Done. hbarta@cm4nvme:~ $","title":"iperf"},{"location":"tech/data/benchmarks/#fio","text":"time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 EXT4 hbarta@cm4nvme:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 Pi-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 Pi-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=38.3MiB/s,w=12.4MiB/s][r=9801,w=3178 IOPS][eta 00m:00s] CM4 Pi-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1445: Mon Oct 31 10:20:32 2022 read: IOPS=9489, BW=37.1MiB/s (38.9MB/s)(3070MiB/82821msec) bw ( KiB/s): min= 4728, max=40432, per=100.00%, avg=37980.56, stdev=5866.60, samples=165 iops : min= 1182, max=10108, avg=9495.14, stdev=1466.65, samples=165 write: IOPS=3171, BW=12.4MiB/s (12.0MB/s)(1026MiB/82821msec); 0 zone resets bw ( KiB/s): min= 1480, max=14096, per=100.00%, avg=12694.01, stdev=2011.83, samples=165 iops : min= 370, max= 3524, avg=3173.50, stdev=502.96, samples=165 cpu : usr=6.20%, sys=29.42%, ctx=787488, majf=0, minf=17 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=37.1MiB/s (38.9MB/s), 37.1MiB/s-37.1MiB/s (38.9MB/s-38.9MB/s), io=3070MiB (3219MB), run=82821-82821msec WRITE: bw=12.4MiB/s (12.0MB/s), 12.4MiB/s-12.4MiB/s (12.0MB/s-12.0MB/s), io=1026MiB (1076MB), run=82821-82821msec Disk stats (read/write): nvme0n1: ios=784533/186940, merge=0/54, ticks=57364/359411, in_queue=416789, util=99.98% real 100.79 user 7.70 sys 38.06 hbarta@cm4nvme:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 Pi-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 Pi-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process Jobs: 1 (f=1): [m(1)][100.0%][r=25.5MiB/s,w=8832KiB/s][r=6531,w=2208 IOPS][eta 00m:00s] CM4 Pi-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1454: Mon Oct 31 10:24:53 2022 read: IOPS=6503, BW=25.4MiB/s (26.6MB/s)(3070MiB/120854msec) bw ( KiB/s): min= 4608, max=31464, per=100.00%, avg=26473.72, stdev=3710.27, samples=237 iops : min= 1152, max= 7866, avg=6618.44, stdev=927.58, samples=237 write: IOPS=2173, BW=8693KiB/s (8902kB/s)(1026MiB/120854msec); 0 zone resets bw ( KiB/s): min= 1752, max=11112, per=100.00%, avg=8847.19, stdev=1268.95, samples=237 iops : min= 438, max= 2778, avg=2211.80, stdev=317.24, samples=237 cpu : usr=6.21%, sys=30.13%, ctx=786638, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=25.4MiB/s (26.6MB/s), 25.4MiB/s-25.4MiB/s (26.6MB/s-26.6MB/s), io=3070MiB (3219MB), run=120854-120854msec WRITE: bw=8693KiB/s (8902kB/s), 8693KiB/s-8693KiB/s (8902kB/s-8902kB/s), io=1026MiB (1076MB), run=120854-120854msec Disk stats (read/write): nvme0n1: ios=784370/194729, merge=0/24, ticks=83268/359720, in_queue=443006, util=98.19% real 121.10 user 7.75 sys 36.82 hbarta@cm4nvme:~ $ Mildly interesting that the second run took 20% longer. Perhaps that is becauee the test file test.dat was reused. It will be removed manually for further testing. Or maybe not. Perhaps it will be useful to duplicate the initial ocnditions ( test.dat present or absent.) ZFS hbarta@cm4nvme:/mnt/pool $ zpool list The ZFS modules are not loaded. Try running '/sbin/modprobe zfs' as root to load them. hbarta@cm4nvme:/mnt/pool $ /sbin/modprobe zfs modprobe: FATAL: Module zfs not found in directory /lib/modules/5.15.74-v8+ hbarta@cm4nvme:/mnt/pool $ Kernel update did not build the modules (though no DKMS errors were observed) so ZFS testing will not be performed at this time.","title":"fio"},{"location":"tech/data/benchmarks/#dd","text":"Performed using this script hbarta@cm4nvme:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 36.0792 s, 119 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0287 s, 389 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.5971 s, 209 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 29.0112 s, 148 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0306 s, 389 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0704 s, 388 MB/s real 129.61 user 0.19 sys 96.71 hbarta@cm4nvme:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 38.493 s, 112 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.1339 s, 386 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.2999 s, 212 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 29.0837 s, 148 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0611 s, 388 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0786 s, 388 MB/s real 129.96 user 0.18 sys 95.28 hbarta@cm4nvme:~ $","title":"dd"},{"location":"tech/data/benchmarks/#2022-10-31-cm4-ether-board","text":"","title":"2022-10-31 CM4 Ether Board"},{"location":"tech/data/benchmarks/#ping_1","text":"hbarta@cm4eb:~ $ ping -c 10 oak --- oak.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9052ms rtt min/avg/max/mdev = 0.213/0.265/0.489/0.075 ms hbarta@cm4eb:~ $ hbarta@cm4eb:~ $ hbarta@cm4eb:~ $ ping -c 10 olive --- olive.localdomain ping statistics --- 10 packets transmitted, 10 received, 0% packet loss, time 9092ms rtt min/avg/max/mdev = 0.164/0.204/0.278/0.038 ms hbarta@cm4eb:~ $","title":"ping"},{"location":"tech/data/benchmarks/#iperf_1","text":"hbarta@cm4eb:~ $ iperf3 -c oak --get-server-output --bidir Connecting to host oak, port 5201 [ 5] local 192.168.1.45 port 57144 connected to 192.168.1.80 port 5201 [ 7] local 192.168.1.45 port 57146 connected to 192.168.1.80 port 5201 [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][TX-C] 0.00-1.00 sec 110 MBytes 926 Mbits/sec 0 669 KBytes [ 7][RX-C] 0.00-1.00 sec 110 MBytes 923 Mbits/sec [ 5][TX-C] 1.00-2.00 sec 110 MBytes 923 Mbits/sec 0 701 KBytes [ 7][RX-C] 1.00-2.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 2.00-3.00 sec 108 MBytes 902 Mbits/sec 0 701 KBytes [ 7][RX-C] 2.00-3.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 3.00-4.00 sec 106 MBytes 891 Mbits/sec 0 701 KBytes [ 7][RX-C] 3.00-4.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 4.00-5.00 sec 109 MBytes 912 Mbits/sec 0 701 KBytes [ 7][RX-C] 4.00-5.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 5.00-6.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 5.00-6.00 sec 112 MBytes 938 Mbits/sec [ 5][TX-C] 6.00-7.00 sec 109 MBytes 912 Mbits/sec 0 809 KBytes [ 7][RX-C] 6.00-7.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 7.00-8.00 sec 108 MBytes 902 Mbits/sec 0 809 KBytes [ 7][RX-C] 7.00-8.00 sec 112 MBytes 937 Mbits/sec [ 5][TX-C] 8.00-9.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 8.00-9.00 sec 112 MBytes 936 Mbits/sec [ 5][TX-C] 9.00-10.00 sec 106 MBytes 891 Mbits/sec 0 809 KBytes [ 7][RX-C] 9.00-10.00 sec 112 MBytes 936 Mbits/sec - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][TX-C] 0.00-10.00 sec 1.05 GBytes 904 Mbits/sec 0 sender [ 5][TX-C] 0.00-10.03 sec 1.05 GBytes 899 Mbits/sec receiver Server output: ----------------------------------------------------------- Server listening on 5201 ----------------------------------------------------------- Accepted connection from 192.168.1.45, port 57132 [ 5] local 192.168.1.80 port 5201 connected to 192.168.1.45 port 57144 [ 8] local 192.168.1.80 port 5201 connected to 192.168.1.45 port 57146 [ ID][Role] Interval Transfer Bitrate Retr Cwnd [ 5][RX-S] 0.00-1.00 sec 104 MBytes 875 Mbits/sec [ 8][TX-S] 0.00-1.00 sec 109 MBytes 912 Mbits/sec 0 484 KBytes [ 5][RX-S] 1.00-2.00 sec 109 MBytes 915 Mbits/sec [ 8][TX-S] 1.00-2.00 sec 112 MBytes 936 Mbits/sec 0 484 KBytes [ 5][RX-S] 2.00-3.00 sec 108 MBytes 910 Mbits/sec [ 8][TX-S] 2.00-3.00 sec 112 MBytes 940 Mbits/sec 0 484 KBytes [ 5][RX-S] 3.00-4.00 sec 105 MBytes 883 Mbits/sec [ 8][TX-S] 3.00-4.00 sec 112 MBytes 940 Mbits/sec 0 587 KBytes [ 5][RX-S] 4.00-5.00 sec 109 MBytes 915 Mbits/sec [ 8][TX-S] 4.00-5.00 sec 111 MBytes 934 Mbits/sec 0 587 KBytes [ 5][RX-S] 5.00-6.00 sec 106 MBytes 892 Mbits/sec [ 8][TX-S] 5.00-6.00 sec 112 MBytes 939 Mbits/sec 0 649 KBytes [ 5][RX-S] 6.00-7.00 sec 109 MBytes 912 Mbits/sec [ 8][TX-S] 6.00-7.00 sec 112 MBytes 944 Mbits/sec 0 682 KBytes [ 5][RX-S] 7.00-8.00 sec 108 MBytes 906 Mbits/sec [ 8][TX-S] 7.00-8.00 sec 111 MBytes 933 Mbits/sec 0 682 KBytes [ 5][RX-S] 8.00-9.00 sec 106 MBytes 888 Mbits/sec [ 8][TX-S] 8.00-9.00 sec 111 MBytes 933 Mbits/sec 0 714 KBytes [ 5][RX-S] 9.00-10.00 sec 107 MBytes 896 Mbits/sec [ 8][TX-S] 9.00-10.00 sec 112 MBytes 944 Mbits/sec 0 714 KBytes [ 5][RX-S] 10.00-10.03 sec 2.82 MBytes 702 Mbits/sec [ 8][TX-S] 10.00-10.03 sec 2.50 MBytes 623 Mbits/sec 0 714 KBytes - - - - - - - - - - - - - - - - - - - - - - - - - [ ID][Role] Interval Transfer Bitrate Retr [ 5][RX-S] 0.00-10.03 sec 1.05 GBytes 899 Mbits/sec receiver [ 8][TX-S] 0.00-10.03 sec 1.09 GBytes 934 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.00 sec 1.09 GBytes 938 Mbits/sec 0 sender [ 7][RX-C] 0.00-10.03 sec 1.09 GBytes 932 Mbits/sec receiver iperf Done. hbarta@cm4eb:~ $","title":"iperf"},{"location":"tech/data/benchmarks/#fio_1","text":"time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 EXT4 hbarta@cm4eb:~ $ rm test.dat hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 CM4-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=38.7MiB/s,w=12.7MiB/s][r=9904,w=3255 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=967: Mon Oct 31 11:14:36 2022 read: IOPS=9503, BW=37.1MiB/s (38.9MB/s)(3070MiB/82699msec) bw ( KiB/s): min= 4552, max=40616, per=100.00%, avg=38038.98, stdev=5865.13, samples=165 iops : min= 1138, max=10154, avg=9509.75, stdev=1466.28, samples=165 write: IOPS=3176, BW=12.4MiB/s (13.0MB/s)(1026MiB/82699msec); 0 zone resets bw ( KiB/s): min= 1408, max=14064, per=100.00%, avg=12712.82, stdev=2002.01, samples=165 iops : min= 352, max= 3516, avg=3178.21, stdev=500.50, samples=165 cpu : usr=6.22%, sys=28.68%, ctx=786082, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=37.1MiB/s (38.9MB/s), 37.1MiB/s-37.1MiB/s (38.9MB/s-38.9MB/s), io=3070MiB (3219MB), run=82699-82699msec WRITE: bw=12.4MiB/s (13.0MB/s), 12.4MiB/s-12.4MiB/s (13.0MB/s-13.0MB/s), io=1026MiB (1076MB), run=82699-82699msec Disk stats (read/write): nvme0n1: ios=784602/182270, merge=0/31, ticks=58219/354448, in_queue=412680, util=99.98% real 100.77 user 7.92 sys 37.13 hbarta@cm4eb:~ $ rm test.dat hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process CM4 CM4-EB EXT4: Laying out IO file (1 file / 4096MiB) Jobs: 1 (f=1): [m(1)][100.0%][r=37.0MiB/s,w=12.4MiB/s][r=9726,w=3163 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=997: Mon Oct 31 11:20:01 2022 read: IOPS=9388, BW=36.7MiB/s (38.5MB/s)(3070MiB/83711msec) bw ( KiB/s): min= 5328, max=39760, per=100.00%, avg=37579.33, stdev=5716.81, samples=167 iops : min= 1332, max= 9940, avg=9394.83, stdev=1429.20, samples=167 write: IOPS=3137, BW=12.3MiB/s (12.9MB/s)(1026MiB/83711msec); 0 zone resets bw ( KiB/s): min= 1696, max=14216, per=100.00%, avg=12559.37, stdev=1933.30, samples=167 iops : min= 424, max= 3554, avg=3139.84, stdev=483.33, samples=167 cpu : usr=6.12%, sys=28.49%, ctx=786601, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=36.7MiB/s (38.5MB/s), 36.7MiB/s-36.7MiB/s (38.5MB/s-38.5MB/s), io=3070MiB (3219MB), run=83711-83711msec WRITE: bw=12.3MiB/s (12.9MB/s), 12.3MiB/s-12.3MiB/s (12.9MB/s-12.9MB/s), io=1026MiB (1076MB), run=83711-83711msec Disk stats (read/write): nvme0n1: ios=785014/183588, merge=0/39, ticks=59125/355769, in_queue=414907, util=99.97% real 101.18 user 7.66 sys 37.39 hbarta@cm4eb:~ $ time -p fio --randrepeat=1 --ioengine=libaio --gtod_reduce=1 --name=\"CM4 CM4-EB EXT4\" --filename=test.dat --bs=4k --iodepth=64 --size=4G --readwrite=randrw --rwmixread=75 CM4 CM4-EB EXT4: (g=0): rw=randrw, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=libaio, iodepth=64 fio-3.25 Starting 1 process Jobs: 1 (f=0): [f(1)][100.0%][r=26.3MiB/s,w=9125KiB/s][r=6721,w=2281 IOPS][eta 00m:00s] CM4 CM4-EB EXT4: (groupid=0, jobs=1): err= 0: pid=1005: Mon Oct 31 11:23:30 2022 read: IOPS=6370, BW=24.9MiB/s (26.1MB/s)(3070MiB/123374msec) bw ( KiB/s): min= 4960, max=31176, per=100.00%, avg=25924.49, stdev=3414.66, samples=242 iops : min= 1240, max= 7794, avg=6481.11, stdev=853.67, samples=242 write: IOPS=2128, BW=8516KiB/s (8720kB/s)(1026MiB/123374msec); 0 zone resets bw ( KiB/s): min= 1688, max=11048, per=100.00%, avg=8663.99, stdev=1195.96, samples=242 iops : min= 422, max= 2762, avg=2165.99, stdev=299.00, samples=242 cpu : usr=6.33%, sys=30.71%, ctx=787064, majf=0, minf=16 IO depths : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, >=64=100.0% submit : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, >=64=0.0% complete : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.1%, >=64=0.0% issued rwts: total=785920,262656,0,0 short=0,0,0,0 dropped=0,0,0,0 latency : target=0, window=0, percentile=100.00%, depth=64 Run status group 0 (all jobs): READ: bw=24.9MiB/s (26.1MB/s), 24.9MiB/s-24.9MiB/s (26.1MB/s-26.1MB/s), io=3070MiB (3219MB), run=123374-123374msec WRITE: bw=8516KiB/s (8720kB/s), 8516KiB/s-8516KiB/s (8720kB/s-8720kB/s), io=1026MiB (1076MB), run=123374-123374msec Disk stats (read/write): nvme0n1: ios=784242/187524, merge=0/26, ticks=84336/348551, in_queue=432907, util=98.25% real 123.61 user 8.05 sys 38.36 hbarta@cm4eb:~ $","title":"fio"},{"location":"tech/data/benchmarks/#dd_1","text":"hbarta@cm4eb:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 35.2099 s, 122 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0149 s, 390 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.8811 s, 206 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 28.4665 s, 151 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 10.9412 s, 393 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.003 s, 390 MB/s real 128.19 user 0.18 sys 96.20 hbarta@cm4eb:~ $ time -p dd-benchmark.sh Creating test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 37.4447 s, 115 MB/s reading back test file 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.1124 s, 387 MB/s write performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 20.1235 s, 213 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 28.0601 s, 153 MB/s read performance 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 10.9816 s, 391 MB/s 4096+0 records in 4096+0 records out 4294967296 bytes (4.3 GB, 4.0 GiB) copied, 11.0046 s, 390 MB/s real 127.75 user 0.26 sys 94.75 hbarta@cm4eb:~ $","title":"dd"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/","text":"Testing networking (WiFi, ETH) Pi 4B Testing the network interfaces on a Pi 4B running Debian Bookworm with available kernel packages. Following installation the `raspi-firmware1 package was held due to performance probnlems with the upgrade. All testing was performed with the firmware that came with the install media. Initial tests were hampered by two issues. I had mistyped the WiFi password causing connection attempts to fail. Ethernet was unmanaged and remained configured even when physically disconnected. This masked WiFi even though WiFi appeared to be associated (wlan0 had an IP address handed out by the local DHCP server.) I got the Ethernet under NetworkManager control and retyped the password and achieved some success with WiFi. Ethernet seemed to work without difficulty with all kernels. Status I'm not happy with results, will retest when I have a chance (not till the weekend.) 5.15.0-2-arm64 This is the kernel that comes with the install media ( 20220121_raspi_4_bookworm.img.xz ). Linux up 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux No WiFi. dmesg capture at https://paste.debian.net/1236231/ No wlan0 in ip addr output. Ethernet seems to work OK. 5.16.0-5-arm64 This is the kernel available in the repo to upgrade following installation. Linux up 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux WiFi works w/out difficulty on both 5G and 2.4G APs. Switching repeatedly between the two SSIDs takes less than ten seconds. 5.17.0-rc8-arm64 Available from experimental Linux up 5.17.0-rc8-arm64 #1 SMP Debian 5.17~rc8-1~exp1 (2022-03-14) aarch64 GNU/Linux WiFi works on 5G, does not associate on 2.4G. Captured output to daemon.log when trying to switch from an associated 5G AP to a 2.4G AP up until NM re-requested the WiFi password. https://paste.debian.net/1236229/ Connect times to the 5G AP was quick at times and not quick other times. At one point it was necessary to turn WiFi off and on again to get it to associate. (Both 5G and 2.4G radios are on the same WiFi AP.) Did not shutdown cleanly. Had to pull power. 5.17.0-trunk-arm64 From experimental Linux up 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux Tested a second time and system hung. Hadn't remoted in - working from desktop. Happened once before and was unable to restart GDM and shutdown hung too. Was able to examine logs and dmesg output and saw nothing unusual but may not have been looking in the right place. Had to remove power both times. Both 5G and 2.4G WiFi seem to be working well. Switching back and forth between them seems timely. 2022-04-03 repeating testing Setup: Recent install of bookworm install media. xzcat 20220121_raspi_4_bookworm.img.xz> /dev/sdf Install raspi-firmware from unstable (direct download) and network-manager and full upgrade of all bookworm packages. apt upgrade -y wget http://ftp.us.debian.org/debian/pool/non-free/r/raspi-firmware/raspi-firmware_1.20220328+ds-1_arm64.deb apt install ./raspi-firmware_1.20220328+ds-1_arm64.deb apt install network-manager Instructions for testing/managing WiFi using CLI HankB_, yes, from the command line, first, turn the wifi device on \"nmcli radio wifi on\" then list the wifi connections \"nmcli dev wifi list\", then sudo nmcli dev wifi connect network-ssid password \"network-password\" Test with 5.17.0-trunk-arm64 (ssh in via Ethernet) root@charm:~# nmcli radio wifi on root@charm:~# nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 97 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 97 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 77 *** WPA2 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 77 *** WPA2 root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" password \"elided\" Device 'wlan0' successfully activated with 'elided'. root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 5209sec preferred_lft 5209sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86390sec preferred_lft 14390sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 7194sec preferred_lft 7194sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 7197sec preferred_lft 4497sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86397sec preferred_lft 14397sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# root@charm:~# root@charm:~# root@charm:~# ifdown eth0 Killed old client process Internet Systems Consortium DHCP Client 4.4.2-P1 Copyright 2004-2021 Internet Systems Consortium. All rights reserved. For info, please visit https://www.isc.org/software/dhcp/ Listening on LPF/eth0/dc:a6:32:bf:65:b5 Sending on LPF/eth0/dc:a6:32:bf:65:b5 Sending on Socket/fallback DHCPRELEASE of 192.168.1.103 on eth0 to 192.168.1.1 port 67 (This session was over Ethernet and resulted in a hung session following ifdown eth0 but I felt that was the easiest way to confirm that traffic was actually going over WiFi.) Reconnnect Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux Kernels available root@charm:~# ls -l /boot/vmlinuz* -rw-r--r-- 1 root root 28614528 Dec 18 23:20 /boot/vmlinuz-5.15.0-2-arm64 -rw-r--r-- 1 root root 29998976 Mar 15 06:54 /boot/vmlinuz-5.16.0-5-arm64 -rw-r--r-- 1 root root 30003072 Mar 29 07:16 /boot/vmlinuz-5.17.0-trunk-arm64 root@charm:~# Test with 5.15.0-2-arm64 (ssh in via Ethernet) root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7136sec preferred_lft 7136sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86394sec preferred_lft 14394sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever root@charm:~# nmcli radio wifi on root@charm:~# nmcli dev wifi list root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" password \"elided\" Error: No Wi-Fi device found. root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7098sec preferred_lft 7098sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86397sec preferred_lft 14397sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever root@charm:~# dmesg paste at https://paste.debian.net/1236660/ test with 5.16.0-5-arm64 starting with SSH over Ethernet root@charm:~# uname -a Linux charm 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7155sec preferred_lft 7155sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86389sec preferred_lft 14389sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 5692sec preferred_lft 5692sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 5696sec preferred_lft 2996sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86390sec preferred_lft 14390sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# ifdown eth0 Killed old client process Internet Systems Consortium DHCP Client 4.4.2-P1 Copyright 2004-2021 Internet Systems Consortium. All rights reserved. For info, please visit https://www.isc.org/software/dhcp/ Listening on LPF/eth0/dc:a6:32:bf:65:b5 Sending on LPF/eth0/dc:a6:32:bf:65:b5 Sending on Socket/fallback DHCPRELEASE of 192.168.1.103 on eth0 to 192.168.1.1 port 67 Start second session over WiFi hbarta@charm:~$ ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 5595sec preferred_lft 5595sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 5599sec preferred_lft 2899sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86399sec preferred_lft 14399sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever hbarta@charm:~$ Confirmation that WiFi is working on both 5G (\"Fanghorn Forest\") and 2.4G (Giant Voice System) via WiFi ssh session. hbarta@charm:~$ nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 100 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 84 **** WPA2 * 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 80 *** WPA2 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 75 *** WPA2 hbarta@charm:~$ su - root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" Device 'wlan0' successfully activated with '369ee301-096a-420b-99a9-68def48160f9'. root@charm:~# nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 94 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 79 *** WPA2 * 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 66 *** WPA2 root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 6825sec preferred_lft 6825sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 6827sec preferred_lft 4127sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86401sec preferred_lft 14401sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# uname -a Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux root@charm:~#","title":"Testing networking (WiFi, ETH) Pi 4B"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#testing-networking-wifi-eth-pi-4b","text":"Testing the network interfaces on a Pi 4B running Debian Bookworm with available kernel packages. Following installation the `raspi-firmware1 package was held due to performance probnlems with the upgrade. All testing was performed with the firmware that came with the install media. Initial tests were hampered by two issues. I had mistyped the WiFi password causing connection attempts to fail. Ethernet was unmanaged and remained configured even when physically disconnected. This masked WiFi even though WiFi appeared to be associated (wlan0 had an IP address handed out by the local DHCP server.) I got the Ethernet under NetworkManager control and retyped the password and achieved some success with WiFi. Ethernet seemed to work without difficulty with all kernels.","title":"Testing networking (WiFi, ETH) Pi 4B"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#status","text":"I'm not happy with results, will retest when I have a chance (not till the weekend.)","title":"Status"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#5150-2-arm64","text":"This is the kernel that comes with the install media ( 20220121_raspi_4_bookworm.img.xz ). Linux up 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux No WiFi. dmesg capture at https://paste.debian.net/1236231/ No wlan0 in ip addr output. Ethernet seems to work OK.","title":"5.15.0-2-arm64"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#5160-5-arm64","text":"This is the kernel available in the repo to upgrade following installation. Linux up 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux WiFi works w/out difficulty on both 5G and 2.4G APs. Switching repeatedly between the two SSIDs takes less than ten seconds.","title":"5.16.0-5-arm64"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#5170-rc8-arm64","text":"Available from experimental Linux up 5.17.0-rc8-arm64 #1 SMP Debian 5.17~rc8-1~exp1 (2022-03-14) aarch64 GNU/Linux WiFi works on 5G, does not associate on 2.4G. Captured output to daemon.log when trying to switch from an associated 5G AP to a 2.4G AP up until NM re-requested the WiFi password. https://paste.debian.net/1236229/ Connect times to the 5G AP was quick at times and not quick other times. At one point it was necessary to turn WiFi off and on again to get it to associate. (Both 5G and 2.4G radios are on the same WiFi AP.) Did not shutdown cleanly. Had to pull power.","title":"5.17.0-rc8-arm64"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#5170-trunk-arm64","text":"From experimental Linux up 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux Tested a second time and system hung. Hadn't remoted in - working from desktop. Happened once before and was unable to restart GDM and shutdown hung too. Was able to examine logs and dmesg output and saw nothing unusual but may not have been looking in the right place. Had to remove power both times. Both 5G and 2.4G WiFi seem to be working well. Switching back and forth between them seems timely.","title":"5.17.0-trunk-arm64"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#2022-04-03-repeating-testing","text":"","title":"2022-04-03 repeating testing"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#setup-recent-install-of-bookworm-install-media","text":"xzcat 20220121_raspi_4_bookworm.img.xz> /dev/sdf Install raspi-firmware from unstable (direct download) and network-manager and full upgrade of all bookworm packages. apt upgrade -y wget http://ftp.us.debian.org/debian/pool/non-free/r/raspi-firmware/raspi-firmware_1.20220328+ds-1_arm64.deb apt install ./raspi-firmware_1.20220328+ds-1_arm64.deb apt install network-manager","title":"Setup: Recent install of bookworm install media."},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#instructions-for-testingmanaging-wifi-using-cli","text":"HankB_, yes, from the command line, first, turn the wifi device on \"nmcli radio wifi on\" then list the wifi connections \"nmcli dev wifi list\", then sudo nmcli dev wifi connect network-ssid password \"network-password\" Test with 5.17.0-trunk-arm64 (ssh in via Ethernet) root@charm:~# nmcli radio wifi on root@charm:~# nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 97 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 97 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 77 *** WPA2 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 77 *** WPA2 root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" password \"elided\" Device 'wlan0' successfully activated with 'elided'. root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 5209sec preferred_lft 5209sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86390sec preferred_lft 14390sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 7194sec preferred_lft 7194sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 7197sec preferred_lft 4497sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86397sec preferred_lft 14397sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# root@charm:~# root@charm:~# root@charm:~# ifdown eth0 Killed old client process Internet Systems Consortium DHCP Client 4.4.2-P1 Copyright 2004-2021 Internet Systems Consortium. All rights reserved. For info, please visit https://www.isc.org/software/dhcp/ Listening on LPF/eth0/dc:a6:32:bf:65:b5 Sending on LPF/eth0/dc:a6:32:bf:65:b5 Sending on Socket/fallback DHCPRELEASE of 192.168.1.103 on eth0 to 192.168.1.1 port 67 (This session was over Ethernet and resulted in a hung session following ifdown eth0 but I felt that was the easiest way to confirm that traffic was actually going over WiFi.) Reconnnect Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux Kernels available root@charm:~# ls -l /boot/vmlinuz* -rw-r--r-- 1 root root 28614528 Dec 18 23:20 /boot/vmlinuz-5.15.0-2-arm64 -rw-r--r-- 1 root root 29998976 Mar 15 06:54 /boot/vmlinuz-5.16.0-5-arm64 -rw-r--r-- 1 root root 30003072 Mar 29 07:16 /boot/vmlinuz-5.17.0-trunk-arm64 root@charm:~# Test with 5.15.0-2-arm64 (ssh in via Ethernet) root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7136sec preferred_lft 7136sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86394sec preferred_lft 14394sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever root@charm:~# nmcli radio wifi on root@charm:~# nmcli dev wifi list root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" password \"elided\" Error: No Wi-Fi device found. root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7098sec preferred_lft 7098sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86397sec preferred_lft 14397sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever root@charm:~# dmesg paste at https://paste.debian.net/1236660/","title":"Instructions for testing/managing WiFi using CLI"},{"location":"test-debug/Pi-4B-Bookworm-WiFi/#test-with-5160-5-arm64-starting-with-ssh-over-ethernet","text":"root@charm:~# uname -a Linux charm 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc mq state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff inet 192.168.1.103/24 brd 192.168.1.255 scope global dynamic eth0 valid_lft 7155sec preferred_lft 7155sec inet6 2601:249:1680:36f0:dea6:32ff:febf:65b5/64 scope global dynamic mngtmpaddr valid_lft 86389sec preferred_lft 14389sec inet6 fe80::dea6:32ff:febf:65b5/64 scope link valid_lft forever preferred_lft forever 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 5692sec preferred_lft 5692sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 5696sec preferred_lft 2996sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86390sec preferred_lft 14390sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# ifdown eth0 Killed old client process Internet Systems Consortium DHCP Client 4.4.2-P1 Copyright 2004-2021 Internet Systems Consortium. All rights reserved. For info, please visit https://www.isc.org/software/dhcp/ Listening on LPF/eth0/dc:a6:32:bf:65:b5 Sending on LPF/eth0/dc:a6:32:bf:65:b5 Sending on Socket/fallback DHCPRELEASE of 192.168.1.103 on eth0 to 192.168.1.1 port 67 Start second session over WiFi hbarta@charm:~$ ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 5595sec preferred_lft 5595sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 5599sec preferred_lft 2899sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86399sec preferred_lft 14399sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever hbarta@charm:~$ Confirmation that WiFi is working on both 5G (\"Fanghorn Forest\") and 2.4G (Giant Voice System) via WiFi ssh session. hbarta@charm:~$ nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 100 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 84 **** WPA2 * 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 80 *** WPA2 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 75 *** WPA2 hbarta@charm:~$ su - root@charm:~# nmcli dev wifi connect \"Fanghorn Forest\" Device 'wlan0' successfully activated with '369ee301-096a-420b-99a9-68def48160f9'. root@charm:~# nmcli dev wifi list IN-USE BSSID SSID MODE CHAN RATE SIGNAL BARS SECURITY 70:4F:57:11:58:63 Nacho24 Infra 6 130 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E9 NRO-33 Infra 10 195 Mbit/s 100 **** WPA2 10:C3:7B:55:05:E8 Giant Voice System Infra 10 195 Mbit/s 94 **** WPA2 70:4F:57:11:58:62 Nacho5G Infra 149 270 Mbit/s 79 *** WPA2 * 10:C3:7B:55:05:EC Fanghorn Forest Infra 157 405 Mbit/s 66 *** WPA2 root@charm:~# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: eth0: <BROADCAST,MULTICAST> mtu 1500 qdisc mq state DOWN group default qlen 1000 link/ether dc:a6:32:bf:65:b5 brd ff:ff:ff:ff:ff:ff 3: wlan0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP group default qlen 1000 link/ether dc:a6:32:bf:65:b6 brd ff:ff:ff:ff:ff:ff inet 192.168.1.164/24 brd 192.168.1.255 scope global dynamic noprefixroute wlan0 valid_lft 6825sec preferred_lft 6825sec inet6 2601:249:1680:36f0::1a72/128 scope global dynamic noprefixroute valid_lft 6827sec preferred_lft 4127sec inet6 2601:249:1680:36f0:dd52:e503:3685:cb27/64 scope global dynamic noprefixroute valid_lft 86401sec preferred_lft 14401sec inet6 fe80::add9:ac99:37f5:fddb/64 scope link noprefixroute valid_lft forever preferred_lft forever root@charm:~# uname -a Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux root@charm:~#","title":"test with 5.16.0-5-arm64 starting with SSH over Ethernet"},{"location":"test-debug/Pi-4B-Bookworm-testing/","text":"Pi 4B Bookworm testing Determine if some previous bugs have been fixed in more recent kernels. Bugs fell into two areas: vc4 module - this included a use-after-free as well as other issues reported in dmesg . SD card timeout - Timeout message repeated every 10s. This had manifested previously and a workaround was to insert an SD card into the slot and the messages stopped. This time that does not work. Further characteristics of the present situation: doesn't boot Boots from attached USB SSD skipping the SD card. No /dev/mmc* after boot accompanied by no WiFi. /dev/mmc* entries, can mount and read card and after several more timeout messages, they stop. When the timeout messages are being reported, the system cannot complete shutdown to reboot. It is necessary to remove power from the system. Normal boot, no mmc timeouts and apparently normal operation. In other words, there is a great variety of behavior with kernels with Bookworm. The good news is that later kernels do not exhibit the problems with the vc4 module so the focus on these notes is to better characterize the SD timeout issue now reported at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1019700 . Procedure Start with a fresh install of 20220808_raspi_4_bookworm.img.xz On an SD card. Boot, configure a user to facilitate access via SSH. Examine dmesg output to determine SD timeouts /dev/mmc* emtries indication of WiFi functionality (via ip addr ) Reboot mutiple times to determine pf the SD timeout problem exists. Update/upgrade to get new kernel and repeat checks above including multiple reboots. find and install other kernels and repeat checks/reboots. Results Bullseye Linux cm4pi 5.15.61-v8+ #1579 SMP PREEMPT Fri Aug 26 11:16:44 BST 2022 aarch64 GNU/Linux No SD timeouts (booted from SD) WiFi working /dev/mmc* entries present Bookworm Installed kernel Linux muon 5.18.0-3-arm64 #1 SMP Debian 5.18.14-1 (2022-07-23) aarch64 GNU/Linux Came up on first install w/out difficulty. Rebooted and power cycled, 3 times each. No SD problem. update/upgrade and reboot. Linux muon 5.19.0-1-arm64 #1 SMP Debian 5.19.6-1 (2022-09-01) aarch64 GNU/Linux On first boot mmc timeout messages are appearing. Delaying completion of boot. Remounting SD card. Cannot remote in. After waiting a couple minutes, tried C-A-D and no response. power cycled. Second boot OK.","title":"Pi 4B Bookworm testing"},{"location":"test-debug/Pi-4B-Bookworm-testing/#pi-4b-bookworm-testing","text":"Determine if some previous bugs have been fixed in more recent kernels. Bugs fell into two areas: vc4 module - this included a use-after-free as well as other issues reported in dmesg . SD card timeout - Timeout message repeated every 10s. This had manifested previously and a workaround was to insert an SD card into the slot and the messages stopped. This time that does not work. Further characteristics of the present situation: doesn't boot Boots from attached USB SSD skipping the SD card. No /dev/mmc* after boot accompanied by no WiFi. /dev/mmc* entries, can mount and read card and after several more timeout messages, they stop. When the timeout messages are being reported, the system cannot complete shutdown to reboot. It is necessary to remove power from the system. Normal boot, no mmc timeouts and apparently normal operation. In other words, there is a great variety of behavior with kernels with Bookworm. The good news is that later kernels do not exhibit the problems with the vc4 module so the focus on these notes is to better characterize the SD timeout issue now reported at https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1019700 .","title":"Pi 4B Bookworm testing"},{"location":"test-debug/Pi-4B-Bookworm-testing/#procedure","text":"Start with a fresh install of 20220808_raspi_4_bookworm.img.xz On an SD card. Boot, configure a user to facilitate access via SSH. Examine dmesg output to determine SD timeouts /dev/mmc* emtries indication of WiFi functionality (via ip addr ) Reboot mutiple times to determine pf the SD timeout problem exists. Update/upgrade to get new kernel and repeat checks above including multiple reboots. find and install other kernels and repeat checks/reboots.","title":"Procedure"},{"location":"test-debug/Pi-4B-Bookworm-testing/#results","text":"","title":"Results"},{"location":"test-debug/Pi-4B-Bookworm-testing/#bullseye","text":"Linux cm4pi 5.15.61-v8+ #1579 SMP PREEMPT Fri Aug 26 11:16:44 BST 2022 aarch64 GNU/Linux No SD timeouts (booted from SD) WiFi working /dev/mmc* entries present","title":"Bullseye"},{"location":"test-debug/Pi-4B-Bookworm-testing/#bookworm","text":"Installed kernel Linux muon 5.18.0-3-arm64 #1 SMP Debian 5.18.14-1 (2022-07-23) aarch64 GNU/Linux Came up on first install w/out difficulty. Rebooted and power cycled, 3 times each. No SD problem. update/upgrade and reboot. Linux muon 5.19.0-1-arm64 #1 SMP Debian 5.19.6-1 (2022-09-01) aarch64 GNU/Linux On first boot mmc timeout messages are appearing. Delaying completion of boot. Remounting SD card. Cannot remote in. After waiting a couple minutes, tried C-A-D and no response. power cycled. Second boot OK.","title":"Bookworm"},{"location":"test-debug/Pi-4B-KDE_bookworm/","text":"KDE Plasma X11 login hang Host: Debian Bookworm on Raspberry Pi 4B (USB/SSD boot) Reported at https://bugs.kde.org/show_bug.cgi?id=467812 Testing the KDE Plasma desktop on Debian Bookworm on a Pi 4B running the 64 bit Debian (not Raspberry Pi) OS. Bookworm is a pending Debian release which at present (2023-03-25) is in \"hard freeze\" and it is important to get all functionality working. 2023-03-25 Previous During testing to confirm that the bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1019700 had been fixed, it was noted that the desktop hung when logging in. In order to test the bug, the system was upgraded to Debian Unstable. When the system was on Debian Testing, the same issue occurred. Since Testing is in hard freeze (and to be released as Bookworm) the hang warranted further investigation and on Bookworm. This Pi 4B is ordinarily run on a different SSD with Bullseye installed and has not had this problem. 2023-03-25 Process Image the SSD with downloaded from https://raspi.debian.net/tested-images/ . Boot and allow to resize and reboot and login. (Rebooting as necessary to get a session that did not exhibit the emmc timeout issue.) Housekeeping: hostname ( charm ), time zone, install sudo and vim and add user hbarta . apt update , apt upgrade Install a kernel (from Unstable) linux-image-6.1.0-7-arm64_6.1.20-1_arm64.deb downloaded from https://packages.debian.org/sid/linux-image-6.1.0-7-arm64 . No additional dependencies were required. Reboot. Install a minimal KDE Plasma desktop ( apt install plasma-desktop ) Reboot. No DM. No xinit . No startx . Went ahead and installed sddm . Start sddm which brings up DM. Login in. Works as expected. Logout. Login using Wayland. Works as expected. After concluding that everything was good, I continued testing and found myself unable to log in again. Additional operations included: Install Chromium and Konsole. Overclocking to 2MHz Back out of the overclock. Can't login. Add another user arnold and try to login as the new user. Still hangs. ~~Conclusion~~ 2023-03-25 Seems like a non-problem. Will continue to test. ... Sadly after some usage, login once again hangs. Will repeat the test. Image the SSD with downloaded from https://raspi.debian.net/tested-images/ . Boot and allow to resize and reboot and login. (Rebooting as necessary to get a session that did not exhibit the emmc timeout issue.) Housekeeping: hostname ( charm ), time zone and add user hbarta . apt update , apt upgrade Install a kernel (from Unstable) linux-image-6.1.0-7-arm64_6.1.20-1_arm64.deb downloaded from https://packages.debian.org/sid/linux-image-6.1.0-7-arm64 . No additional dependencies were required. apt install plasma-desktop sddm konsole chromium vim -y Reboot. Login (defaults to Wayland) and looks OK. Logout and start monitors dmesg -follow , cd /var/log;tail -f Xorg.0.log Login (Wayland) and all looks good. Logout Login (Wayland) and all looks good. Start and exit Konsole Start and exit Chromium logout and login Open Chromium. and open google.com. OK. Try to open second page and browser is foobar. Doesn't echo typing, finally able to open a second page (local MkDocs notes) and display is incomplete. Open system monitor and Konsole and they work OK. Close all and logout. Login to X.org session. Login hangs. systemctl restart sddm Login to X.org session. Login hangs. systemctl restart sddm Login to Wayland session. Login OK. 2023-03-26 Filing a bug report Collect information Prepare pastebin content 2023-03-26 try XFCE Test two things: X11 works with another DE XFCE installs lightdm , can test that with KDE Result: XFCE (on X11) starts w/out issue using lightdm or sddm . Plasma/X11 hangs when started using lightdm . Plasma/Wayland starts normally from lightdm . Bug report at https://bugs.kde.org/show_bug.cgi?id=467812","title":"KDE Plasma X11 login hang"},{"location":"test-debug/Pi-4B-KDE_bookworm/#kde-plasma-x11-login-hang","text":"Host: Debian Bookworm on Raspberry Pi 4B (USB/SSD boot) Reported at https://bugs.kde.org/show_bug.cgi?id=467812 Testing the KDE Plasma desktop on Debian Bookworm on a Pi 4B running the 64 bit Debian (not Raspberry Pi) OS. Bookworm is a pending Debian release which at present (2023-03-25) is in \"hard freeze\" and it is important to get all functionality working.","title":"KDE Plasma X11 login hang"},{"location":"test-debug/Pi-4B-KDE_bookworm/#2023-03-25-previous","text":"During testing to confirm that the bug https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1019700 had been fixed, it was noted that the desktop hung when logging in. In order to test the bug, the system was upgraded to Debian Unstable. When the system was on Debian Testing, the same issue occurred. Since Testing is in hard freeze (and to be released as Bookworm) the hang warranted further investigation and on Bookworm. This Pi 4B is ordinarily run on a different SSD with Bullseye installed and has not had this problem.","title":"2023-03-25 Previous"},{"location":"test-debug/Pi-4B-KDE_bookworm/#2023-03-25-process","text":"Image the SSD with downloaded from https://raspi.debian.net/tested-images/ . Boot and allow to resize and reboot and login. (Rebooting as necessary to get a session that did not exhibit the emmc timeout issue.) Housekeeping: hostname ( charm ), time zone, install sudo and vim and add user hbarta . apt update , apt upgrade Install a kernel (from Unstable) linux-image-6.1.0-7-arm64_6.1.20-1_arm64.deb downloaded from https://packages.debian.org/sid/linux-image-6.1.0-7-arm64 . No additional dependencies were required. Reboot. Install a minimal KDE Plasma desktop ( apt install plasma-desktop ) Reboot. No DM. No xinit . No startx . Went ahead and installed sddm . Start sddm which brings up DM. Login in. Works as expected. Logout. Login using Wayland. Works as expected. After concluding that everything was good, I continued testing and found myself unable to log in again. Additional operations included: Install Chromium and Konsole. Overclocking to 2MHz Back out of the overclock. Can't login. Add another user arnold and try to login as the new user. Still hangs.","title":"2023-03-25 Process"},{"location":"test-debug/Pi-4B-KDE_bookworm/#conclusion-2023-03-25","text":"Seems like a non-problem. Will continue to test. ... Sadly after some usage, login once again hangs. Will repeat the test. Image the SSD with downloaded from https://raspi.debian.net/tested-images/ . Boot and allow to resize and reboot and login. (Rebooting as necessary to get a session that did not exhibit the emmc timeout issue.) Housekeeping: hostname ( charm ), time zone and add user hbarta . apt update , apt upgrade Install a kernel (from Unstable) linux-image-6.1.0-7-arm64_6.1.20-1_arm64.deb downloaded from https://packages.debian.org/sid/linux-image-6.1.0-7-arm64 . No additional dependencies were required. apt install plasma-desktop sddm konsole chromium vim -y Reboot. Login (defaults to Wayland) and looks OK. Logout and start monitors dmesg -follow , cd /var/log;tail -f Xorg.0.log Login (Wayland) and all looks good. Logout Login (Wayland) and all looks good. Start and exit Konsole Start and exit Chromium logout and login Open Chromium. and open google.com. OK. Try to open second page and browser is foobar. Doesn't echo typing, finally able to open a second page (local MkDocs notes) and display is incomplete. Open system monitor and Konsole and they work OK. Close all and logout. Login to X.org session. Login hangs. systemctl restart sddm Login to X.org session. Login hangs. systemctl restart sddm Login to Wayland session. Login OK.","title":"~~Conclusion~~ 2023-03-25"},{"location":"test-debug/Pi-4B-KDE_bookworm/#2023-03-26-filing-a-bug-report","text":"Collect information Prepare pastebin content","title":"2023-03-26 Filing a bug report"},{"location":"test-debug/Pi-4B-KDE_bookworm/#2023-03-26-try-xfce","text":"Test two things: X11 works with another DE XFCE installs lightdm , can test that with KDE Result: XFCE (on X11) starts w/out issue using lightdm or sddm . Plasma/X11 hangs when started using lightdm . Plasma/Wayland starts normally from lightdm . Bug report at https://bugs.kde.org/show_bug.cgi?id=467812","title":"2023-03-26 try XFCE"},{"location":"test-debug/Pi-4B-firmware/","text":"Firmware issue raspi-firmware Debian Bookworm https://github.com/raspberrypi/firmware/issues/1705 Forwarded to Debian - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1007719 2022-04-03 test tagged release Previous testing established that the latest firmware pulled from master did not exhibit this problem. That is now pulled into a tagged release 1.2022-328 https://github.com/raspberrypi/firmware/archive/refs/tags/1.20220328.tar.gz I have a Pi 4B/8GH with Bookworm (with task-gnome-desktop ) installed and with the following kernels: hbarta@up:~$ ls -l /boot/vmlinuz* -rw-r--r-- 1 root root 28614528 Dec 18 23:20 /boot/vmlinuz-5.15.0-2-arm64 -rw-r--r-- 1 root root 29998976 Mar 15 06:54 /boot/vmlinuz-5.16.0-5-arm64 -rw-r--r-- 1 root root 30001664 Mar 14 06:04 /boot/vmlinuz-5.17.0-rc8-arm64 -rw-r--r-- 1 root root 30003072 Mar 29 07:16 /boot/vmlinuz-5.17.0-trunk-arm64 hbarta@up:~$ Testing will be performed with the tagged firmware on all kernels. The following command will be used to determine if the issue exists. cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies vcdbg downloaded from https://drive.google.com/file/d/1HS9E5vnxxNqrizB4mEYrnFoQQ1axSRKm/view?usp=sharing is used to confirm firmware version. Procedure Download and extract the frmware tarball. cd firmware-1.20220328/boot cp bootcode.bin *.dat *.elf /boot/firmware Edit /boot/firmware/config.txt to select trhe desired kernel Reboot and check results. Firmware prior to starting test/ root@up:~# vcdbg version vcos_build_version = 40787ee5905644f639a2a0f6e00ae12e517a2211 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Aug 3 2021 vcos_build_time = 18:14:56 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@up:~# Testing Attempts to use the older kernels (5.15.6, 5.16.0) were unsuccessful because the installation of one of the more recent kernels apparently purged those. Instead the existing 5.17.0-trunk-arm64 kernel will be tested with the tagged tarball and then testing will be performed with a fresh install and the raspi-firmware in the Bookworm repo. root@up:~# uname -a Linux up 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux root@up:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 root@up:~# vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@up:~# Fresh install xzcat 20220121_raspi_4_bookworm.img.xz> /dev/sdf boot adduser hbarta hostnamectl set-hostname charm apt update reboot, copy vcdbg root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 root@charm:~# ./vcdbg version vcos_build_version = 40787ee5905644f639a2a0f6e00ae12e517a2211 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Aug 3 2021 vcos_build_time = 18:14:56 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Upgrade raspi-firmware only. root@charm:~# apt install raspi-firmware Reading package lists... Done Building dependency tree... Done Reading state information... Done The following packages will be upgraded: raspi-firmware 1 upgraded, 0 newly installed, 0 to remove and 110 not upgraded. Need to get 4548 kB of archives. After this operation, 31.7 kB of additional disk space will be used. Get:1 http://deb.debian.org/debian bookworm/non-free arm64 raspi-firmware arm64 1.20220120+ds-1 [4548 kB] Fetched 4548 kB in 2s (2976 kB/s) (Reading database ... 18717 files and directories currently installed.) Preparing to unpack .../raspi-firmware_1.20220120+ds-1_arm64.deb ... Unpacking raspi-firmware (1.20220120+ds-1) over (1.20210805+ds-1) ... Setting up raspi-firmware (1.20220120+ds-1) ... Configuration file '/etc/default/raspi-firmware' ==> Modified (by you or by a script) since installation. ==> Package distributor has shipped an updated version. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** raspi-firmware (Y/I/N/O/D/Z) [default=N] ? D --- /etc/default/raspi-firmware 2022-01-21 08:41:33.325239447 +0000 +++ /etc/default/raspi-firmware.dpkg-new 2022-02-11 05:33:01.000000000 +0000 @@ -25,7 +25,7 @@ # but you can specify otherwise, including booting by partition label # (i.e. ROOTPART=\"LABEL=root\") # -ROOTPART=LABEL=RASPIROOT +#ROOTPART=/dev/mmcblk0p2 # Main baremetal application that is started by the firmware once the # hardware has been initialized. Usually, this is the Linux kernel but @@ -73,7 +73,7 @@ # which drives the serial ports) gets its clock from the GPU, as # explained here: # -# https://www.raspberrypi.org/documentation/configuration/uart.md +# https://www.raspberrypi.com/documentation/computers/configuration.html#mini-uart-and-cpu-core-frequency # # The clock speeds the RPi4 GPU uses are 360/500/550 MHz. If you # intend to use the serial console, you need to set GPU_FREQ to @@ -98,7 +98,7 @@ # Create a file \"/etc/default/raspi-firmware-custom\" to add custom parameter # to startup the kernel. Maybe not all options are supported. -# (see https://www.raspberrypi.org/documentation/configuration/config-txt/) +# (see https://www.raspberrypi.com/documentation/computers/config_txt.html) # # To pass extra arbitrary parameters to the kernel at boot, you can specify # them in \"/etc/default/raspi-extra-cmdline\". Keep in mind they should be Configuration file '/etc/default/raspi-firmware' ==> Modified (by you or by a script) since installation. ==> Package distributor has shipped an updated version. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** raspi-firmware (Y/I/N/O/D/Z) [default=N] ? Y Installing new version of config file /etc/default/raspi-firmware ... Installing new version of config file /etc/kernel/postinst.d/z50-raspi-firmware ... Processing triggers for initramfs-tools (0.140) ... update-initramfs: Generating /boot/initrd.img-5.15.0-2-arm64 root@charm:~# Reboot root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies cat: /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies: No such file or directory root@charm:~# dpkg -l | grep raspi-firmware ii raspi-firmware 1.20220120+ds-1 arm64 Raspberry Pi family GPU firmware and bootloaders root@charm:~# ./vcdbg version vcos_build_version = bd88f66f8952d34e4e0613a85c7a6d3da49e13e2 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Jan 20 2022 vcos_build_time = 13:56:48 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Wrong package. wget http://ftp.us.debian.org/debian/pool/non-free/r/raspi-firmware/raspi-firmware_1.20220328+ds-1_arm64.deb root@charm:~# apt install ./raspi-firmware_1.20220328+ds-1_arm64.deb Reading package lists... Done Building dependency tree... Done Reading state information... Done Note, selecting 'raspi-firmware' instead of './raspi-firmware_1.20220328+ds-1_arm64.deb' The following packages will be upgraded: raspi-firmware 1 upgraded, 0 newly installed, 0 to remove and 110 not upgraded. Need to get 0 B/4551 kB of archives. After this operation, 8192 B of additional disk space will be used. Get:1 /root/raspi-firmware_1.20220328+ds-1_arm64.deb raspi-firmware arm64 1.20220328+ds-1 [4551 kB] (Reading database ... 18717 files and directories currently installed.) Preparing to unpack .../raspi-firmware_1.20220328+ds-1_arm64.deb ... Unpacking raspi-firmware (1.20220328+ds-1) over (1.20220120+ds-1) ... Setting up raspi-firmware (1.20220328+ds-1) ... Processing triggers for initramfs-tools (0.140) ... update-initramfs: Generating /boot/initrd.img-5.15.0-2-arm64 N: Download is performed unsandboxed as root as file '/root/raspi-firmware_1.20220328+ds-1_arm64.deb' couldn't be accessed by user '_apt'. - pkgAcquire::Run (13: Permission denied) root@charm:~# reboot hbarta@charm:~$ uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Perform full upgrade and reboot 110 upgraded, 3 newly installed, 0 to remove and 0 not upgraded. hbarta@charm:~$ uname -a Linux charm 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Install with kernel from experimental root@charm:~# cat /etc/apt/preferences.d/linux-kernel Package: * Pin: release o=Debian,a=experimental Pin-Priority: 102 root@up:~# apt policy Package files: 100 /var/lib/dpkg/status release a=now 500 http://deb.debian.org/debian bookworm/non-free arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=non-free,b=arm64 origin deb.debian.org 500 http://deb.debian.org/debian bookworm/contrib arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=contrib,b=arm64 origin deb.debian.org 500 http://deb.debian.org/debian bookworm/main arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=main,b=arm64 origin deb.debian.org Pinned packages: root@charm:~# root@charm:~# root@charm:~# echo \"deb http://deb.debian.org/debian experimental main\" >> /etc/apt/sources.list root@charm:~# apt update Hit:1 http://deb.debian.org/debian bookworm InRelease Hit:2 http://security.debian.org/debian-security bookworm-security InRelease Get:3 http://deb.debian.org/debian experimental InRelease [75.4 kB] Get:4 http://deb.debian.org/debian experimental/main arm64 Packages [369 kB] Get:5 http://deb.debian.org/debian experimental/main Translation-en [232 kB] Fetched 677 kB in 3s (250 kB/s) Reading package lists... Done Building dependency tree... Done Reading state information... Done All packages are up to date. root@charm:~# apt install -t experimental linux-image-5.17.0-trunk-arm64 Reading package lists... Done Building dependency tree... Done Reading state information... Done Suggested packages: linux-doc-5.17 debian-kernel-handbook The following NEW packages will be installed: linux-image-5.17.0-trunk-arm64 0 upgraded, 1 newly installed, 0 to remove and 16 not upgraded. Need to get 58.6 MB of archives. After this operation, 406 MB of additional disk space will be used. Get:1 http://deb.debian.org/debian experimental/main arm64 linux-image-5.17.0-trunk-arm64 arm64 5.17.1-1~exp1 [58.6 MB] Fetched 58.6 MB in 4s (13.8 MB/s) Selecting previously unselected package linux-image-5.17.0-trunk-arm64. (Reading database ... 23590 files and directories currently installed.) Preparing to unpack .../linux-image-5.17.0-trunk-arm64_5.17.1-1~exp1_arm64.deb ... Unpacking linux-image-5.17.0-trunk-arm64 (5.17.1-1~exp1) ... Setting up linux-image-5.17.0-trunk-arm64 (5.17.1-1~exp1) ... I: /vmlinuz.old is now a symlink to boot/vmlinuz-5.16.0-5-arm64 I: /initrd.img.old is now a symlink to boot/initrd.img-5.16.0-5-arm64 I: /vmlinuz is now a symlink to boot/vmlinuz-5.17.0-trunk-arm64 I: /initrd.img is now a symlink to boot/initrd.img-5.17.0-trunk-arm64 /etc/kernel/postinst.d/initramfs-tools: update-initramfs: Generating /boot/initrd.img-5.17.0-trunk-arm64 root@charm:~# Note: Results of following apt policy command were inadvertently copied into /etc/apt/preferences.d/linux-kernel but seem to be ignored by apt or at least did not prevent the desired operation. Reboot hbarta@charm:~$ uname -a Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~#","title":"Firmware issue raspi-firmware Debian Bookworm"},{"location":"test-debug/Pi-4B-firmware/#firmware-issue-raspi-firmware-debian-bookworm","text":"https://github.com/raspberrypi/firmware/issues/1705 Forwarded to Debian - https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1007719","title":"Firmware issue raspi-firmware Debian Bookworm"},{"location":"test-debug/Pi-4B-firmware/#2022-04-03-test-tagged-release","text":"Previous testing established that the latest firmware pulled from master did not exhibit this problem. That is now pulled into a tagged release 1.2022-328 https://github.com/raspberrypi/firmware/archive/refs/tags/1.20220328.tar.gz I have a Pi 4B/8GH with Bookworm (with task-gnome-desktop ) installed and with the following kernels: hbarta@up:~$ ls -l /boot/vmlinuz* -rw-r--r-- 1 root root 28614528 Dec 18 23:20 /boot/vmlinuz-5.15.0-2-arm64 -rw-r--r-- 1 root root 29998976 Mar 15 06:54 /boot/vmlinuz-5.16.0-5-arm64 -rw-r--r-- 1 root root 30001664 Mar 14 06:04 /boot/vmlinuz-5.17.0-rc8-arm64 -rw-r--r-- 1 root root 30003072 Mar 29 07:16 /boot/vmlinuz-5.17.0-trunk-arm64 hbarta@up:~$ Testing will be performed with the tagged firmware on all kernels. The following command will be used to determine if the issue exists. cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies vcdbg downloaded from https://drive.google.com/file/d/1HS9E5vnxxNqrizB4mEYrnFoQQ1axSRKm/view?usp=sharing is used to confirm firmware version. Procedure Download and extract the frmware tarball. cd firmware-1.20220328/boot cp bootcode.bin *.dat *.elf /boot/firmware Edit /boot/firmware/config.txt to select trhe desired kernel Reboot and check results. Firmware prior to starting test/ root@up:~# vcdbg version vcos_build_version = 40787ee5905644f639a2a0f6e00ae12e517a2211 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Aug 3 2021 vcos_build_time = 18:14:56 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@up:~#","title":"2022-04-03 test tagged release"},{"location":"test-debug/Pi-4B-firmware/#testing","text":"Attempts to use the older kernels (5.15.6, 5.16.0) were unsuccessful because the installation of one of the more recent kernels apparently purged those. Instead the existing 5.17.0-trunk-arm64 kernel will be tested with the tagged tarball and then testing will be performed with a fresh install and the raspi-firmware in the Bookworm repo. root@up:~# uname -a Linux up 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux root@up:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 root@up:~# vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@up:~#","title":"Testing"},{"location":"test-debug/Pi-4B-firmware/#fresh-install","text":"xzcat 20220121_raspi_4_bookworm.img.xz> /dev/sdf boot adduser hbarta hostnamectl set-hostname charm apt update reboot, copy vcdbg root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 root@charm:~# ./vcdbg version vcos_build_version = 40787ee5905644f639a2a0f6e00ae12e517a2211 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Aug 3 2021 vcos_build_time = 18:14:56 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Upgrade raspi-firmware only. root@charm:~# apt install raspi-firmware Reading package lists... Done Building dependency tree... Done Reading state information... Done The following packages will be upgraded: raspi-firmware 1 upgraded, 0 newly installed, 0 to remove and 110 not upgraded. Need to get 4548 kB of archives. After this operation, 31.7 kB of additional disk space will be used. Get:1 http://deb.debian.org/debian bookworm/non-free arm64 raspi-firmware arm64 1.20220120+ds-1 [4548 kB] Fetched 4548 kB in 2s (2976 kB/s) (Reading database ... 18717 files and directories currently installed.) Preparing to unpack .../raspi-firmware_1.20220120+ds-1_arm64.deb ... Unpacking raspi-firmware (1.20220120+ds-1) over (1.20210805+ds-1) ... Setting up raspi-firmware (1.20220120+ds-1) ... Configuration file '/etc/default/raspi-firmware' ==> Modified (by you or by a script) since installation. ==> Package distributor has shipped an updated version. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** raspi-firmware (Y/I/N/O/D/Z) [default=N] ? D --- /etc/default/raspi-firmware 2022-01-21 08:41:33.325239447 +0000 +++ /etc/default/raspi-firmware.dpkg-new 2022-02-11 05:33:01.000000000 +0000 @@ -25,7 +25,7 @@ # but you can specify otherwise, including booting by partition label # (i.e. ROOTPART=\"LABEL=root\") # -ROOTPART=LABEL=RASPIROOT +#ROOTPART=/dev/mmcblk0p2 # Main baremetal application that is started by the firmware once the # hardware has been initialized. Usually, this is the Linux kernel but @@ -73,7 +73,7 @@ # which drives the serial ports) gets its clock from the GPU, as # explained here: # -# https://www.raspberrypi.org/documentation/configuration/uart.md +# https://www.raspberrypi.com/documentation/computers/configuration.html#mini-uart-and-cpu-core-frequency # # The clock speeds the RPi4 GPU uses are 360/500/550 MHz. If you # intend to use the serial console, you need to set GPU_FREQ to @@ -98,7 +98,7 @@ # Create a file \"/etc/default/raspi-firmware-custom\" to add custom parameter # to startup the kernel. Maybe not all options are supported. -# (see https://www.raspberrypi.org/documentation/configuration/config-txt/) +# (see https://www.raspberrypi.com/documentation/computers/config_txt.html) # # To pass extra arbitrary parameters to the kernel at boot, you can specify # them in \"/etc/default/raspi-extra-cmdline\". Keep in mind they should be Configuration file '/etc/default/raspi-firmware' ==> Modified (by you or by a script) since installation. ==> Package distributor has shipped an updated version. What would you like to do about it ? Your options are: Y or I : install the package maintainer's version N or O : keep your currently-installed version D : show the differences between the versions Z : start a shell to examine the situation The default action is to keep your current version. *** raspi-firmware (Y/I/N/O/D/Z) [default=N] ? Y Installing new version of config file /etc/default/raspi-firmware ... Installing new version of config file /etc/kernel/postinst.d/z50-raspi-firmware ... Processing triggers for initramfs-tools (0.140) ... update-initramfs: Generating /boot/initrd.img-5.15.0-2-arm64 root@charm:~# Reboot root@charm:~# uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux root@charm:~# cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies cat: /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies: No such file or directory root@charm:~# dpkg -l | grep raspi-firmware ii raspi-firmware 1.20220120+ds-1 arm64 Raspberry Pi family GPU firmware and bootloaders root@charm:~# ./vcdbg version vcos_build_version = bd88f66f8952d34e4e0613a85c7a6d3da49e13e2 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Jan 20 2022 vcos_build_time = 13:56:48 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Wrong package. wget http://ftp.us.debian.org/debian/pool/non-free/r/raspi-firmware/raspi-firmware_1.20220328+ds-1_arm64.deb root@charm:~# apt install ./raspi-firmware_1.20220328+ds-1_arm64.deb Reading package lists... Done Building dependency tree... Done Reading state information... Done Note, selecting 'raspi-firmware' instead of './raspi-firmware_1.20220328+ds-1_arm64.deb' The following packages will be upgraded: raspi-firmware 1 upgraded, 0 newly installed, 0 to remove and 110 not upgraded. Need to get 0 B/4551 kB of archives. After this operation, 8192 B of additional disk space will be used. Get:1 /root/raspi-firmware_1.20220328+ds-1_arm64.deb raspi-firmware arm64 1.20220328+ds-1 [4551 kB] (Reading database ... 18717 files and directories currently installed.) Preparing to unpack .../raspi-firmware_1.20220328+ds-1_arm64.deb ... Unpacking raspi-firmware (1.20220328+ds-1) over (1.20220120+ds-1) ... Setting up raspi-firmware (1.20220328+ds-1) ... Processing triggers for initramfs-tools (0.140) ... update-initramfs: Generating /boot/initrd.img-5.15.0-2-arm64 N: Download is performed unsandboxed as root as file '/root/raspi-firmware_1.20220328+ds-1_arm64.deb' couldn't be accessed by user '_apt'. - pkgAcquire::Run (13: Permission denied) root@charm:~# reboot hbarta@charm:~$ uname -a Linux charm 5.15.0-2-arm64 #1 SMP Debian 5.15.5-2 (2021-12-18) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Perform full upgrade and reboot 110 upgraded, 3 newly installed, 0 to remove and 0 not upgraded. hbarta@charm:~$ uname -a Linux charm 5.16.0-5-arm64 #1 SMP Debian 5.16.14-1 (2022-03-15) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~# Install with kernel from experimental root@charm:~# cat /etc/apt/preferences.d/linux-kernel Package: * Pin: release o=Debian,a=experimental Pin-Priority: 102 root@up:~# apt policy Package files: 100 /var/lib/dpkg/status release a=now 500 http://deb.debian.org/debian bookworm/non-free arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=non-free,b=arm64 origin deb.debian.org 500 http://deb.debian.org/debian bookworm/contrib arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=contrib,b=arm64 origin deb.debian.org 500 http://deb.debian.org/debian bookworm/main arm64 Packages release o=Debian,a=testing,n=bookworm,l=Debian,c=main,b=arm64 origin deb.debian.org Pinned packages: root@charm:~# root@charm:~# root@charm:~# echo \"deb http://deb.debian.org/debian experimental main\" >> /etc/apt/sources.list root@charm:~# apt update Hit:1 http://deb.debian.org/debian bookworm InRelease Hit:2 http://security.debian.org/debian-security bookworm-security InRelease Get:3 http://deb.debian.org/debian experimental InRelease [75.4 kB] Get:4 http://deb.debian.org/debian experimental/main arm64 Packages [369 kB] Get:5 http://deb.debian.org/debian experimental/main Translation-en [232 kB] Fetched 677 kB in 3s (250 kB/s) Reading package lists... Done Building dependency tree... Done Reading state information... Done All packages are up to date. root@charm:~# apt install -t experimental linux-image-5.17.0-trunk-arm64 Reading package lists... Done Building dependency tree... Done Reading state information... Done Suggested packages: linux-doc-5.17 debian-kernel-handbook The following NEW packages will be installed: linux-image-5.17.0-trunk-arm64 0 upgraded, 1 newly installed, 0 to remove and 16 not upgraded. Need to get 58.6 MB of archives. After this operation, 406 MB of additional disk space will be used. Get:1 http://deb.debian.org/debian experimental/main arm64 linux-image-5.17.0-trunk-arm64 arm64 5.17.1-1~exp1 [58.6 MB] Fetched 58.6 MB in 4s (13.8 MB/s) Selecting previously unselected package linux-image-5.17.0-trunk-arm64. (Reading database ... 23590 files and directories currently installed.) Preparing to unpack .../linux-image-5.17.0-trunk-arm64_5.17.1-1~exp1_arm64.deb ... Unpacking linux-image-5.17.0-trunk-arm64 (5.17.1-1~exp1) ... Setting up linux-image-5.17.0-trunk-arm64 (5.17.1-1~exp1) ... I: /vmlinuz.old is now a symlink to boot/vmlinuz-5.16.0-5-arm64 I: /initrd.img.old is now a symlink to boot/initrd.img-5.16.0-5-arm64 I: /vmlinuz is now a symlink to boot/vmlinuz-5.17.0-trunk-arm64 I: /initrd.img is now a symlink to boot/initrd.img-5.17.0-trunk-arm64 /etc/kernel/postinst.d/initramfs-tools: update-initramfs: Generating /boot/initrd.img-5.17.0-trunk-arm64 root@charm:~# Note: Results of following apt policy command were inadvertently copied into /etc/apt/preferences.d/linux-kernel but seem to be ignored by apt or at least did not prevent the desired operation. Reboot hbarta@charm:~$ uname -a Linux charm 5.17.0-trunk-arm64 #1 SMP Debian 5.17.1-1~exp1 (2022-03-29) aarch64 GNU/Linux hbarta@charm:~$ cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_frequencies 600000 700000 800000 900000 1000000 1100000 1200000 1300000 1400000 1500000 hbarta@charm:~$ su - root@charm:~# ./vcdbg version vcos_build_version = e5a963efa66a1974127860b42e913d2374139ff5 (clean) vcos_build_branch = bcm2711_2 debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_application' vcos_build_application = ? vcos_build_date = Mar 24 2022 vcos_build_time = 13:19:26 vcos_build_user = dom vcos_build_hostname = buildbot vcos_build_platform = raspberrypi_linux debug_sym: ReadVideoCoreMemoryBySymbol: Symbol not found: 'vcos_build_type' vcos_build_type = ? root@charm:~#","title":"Fresh install"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/","text":"Pi CM4 PCIe testing Purpose Test Debian Bookworm on a Pi CM4 with (and booting from) an NVME adapter and two SATA adapters in the \"Compute Module 4 IO Board\" Results as of 2023-03-28 NVME with SSD System boots from NVME and works as expected. The system will not boot from SD card when the PCIe/NVME adapter is installed. ASMedia PCIe/SATA adapter Boot from SD card works 3-4 times out of 5. Other times halts with a blank screen following the \"rainbow screen.\" When a SATA SSD is connected (when booting from SD) it appears to work. Boot from SSD was unsuccessful. The \"rainbow screen\" did not appear but the subsequent (BIOS) screen looping through possible boot modes ( NETWORK and BCM-USB-MSD ) At some point something was printed to the serial port but it looked like a single character at the wrong baud rate. Many times the system was power cycled with both SD card in place and SSD connected and the result was a blank screen and no serial output. Once the system came up and appeared to boot from the SD card and find root on the SSD. After sevaral tries I duplicated that and captured the serial output. root@cm4iob:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Flags: bus master, fast devsel, latency 0, IRQ 23 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 Memory behind bridge: 00000000-000fffff [size=1M] [32-bit] Prefetchable memory behind bridge: [disabled] [64-bit] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates Kernel driver in use: pcieport 01:00.0 SATA controller: ASMedia Technology Inc. Device 1064 (rev 02) (prog-if 01 [AHCI 1.0]) Subsystem: ZyDAS Technology Corp. Device 2116 Flags: bus master, fast devsel, latency 0, IRQ 38 Memory at 600080000 (32-bit, non-prefetchable) [size=8K] Memory at 600082000 (32-bit, non-prefetchable) [size=8K] Expansion ROM at 600000000 [virtual] [disabled] [size=512K] Capabilities: [40] Power Management version 3 Capabilities: [50] MSI: Enable+ Count=1/1 Maskable- 64bit+ Capabilities: [80] Express Endpoint, MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [130] Secondary PCI Express Kernel driver in use: ahci Kernel modules: ahci root@cm4iob:~# Marvel PCIe/SATA adapter Unable to boot from SD card when this adapter is in the PCIe slot. The \"rainbow screen\" appears and the screen goes blank with no further (on screen) behavior. With no SD card in the slot, the firmware cycles through boot options until it gets to PXE boot and then repeats the cycle. With the SD card removed and a bootable SSD connected to the adapter, the \"rainbow screen\" does not appear and there is no output to the serial port. Card dettails (from R-Pi OS) root@piserver:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Device tree node: /sys/firmware/devicetree/base/scb/pcie@7d500000/pci@0,0 Flags: bus master, fast devsel, latency 0 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 I/O behind bridge: 00000000-00000fff [size=4K] Memory behind bridge: c0000000-c00fffff [size=1M] Prefetchable memory behind bridge: [disabled] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates 01:00.0 SATA controller: Marvell Technology Group Ltd. 88SE9215 PCIe 2.0 x1 4-port SATA 6 Gb/s Controller (rev 11) (prog-if 01 [AHCI 1.0]) Subsystem: Marvell Technology Group Ltd. 88SE9215 PCIe 2.0 x1 4-port SATA 6 Gb/s Controller Device tree node: /sys/firmware/devicetree/base/scb/pcie@7d500000/pci@0,0/usb@0,0 Flags: bus master, fast devsel, latency 0, IRQ 67 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 Memory at 600010000 (32-bit, non-prefetchable) [size=2K] Expansion ROM at 600000000 [disabled] [size=64K] Capabilities: [40] Power Management version 3 Capabilities: [50] MSI: Enable+ Count=1/1 Maskable- 64bit- Capabilities: [70] Express Legacy Endpoint, MSI 00 Capabilities: [e0] SATA HBA v0.0 Capabilities: [100] Advanced Error Reporting Kernel driver in use: ahci Kernel modules: ahci root@piserver:~# Capture of serial output during R-Pi OS boot. NVME details root@debnvme:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Flags: bus master, fast devsel, latency 0, IRQ 23 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 Memory behind bridge: 00000000-000fffff [size=1M] [32-bit] Prefetchable memory behind bridge: [disabled] [64-bit] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates Kernel driver in use: pcieport 01:00.0 Non-Volatile memory controller: Toshiba Corporation XG5 NVMe SSD Controller (prog-if 02 [NVM Express]) Subsystem: Toshiba Corporation XG5 NVMe SSD Controller Flags: bus master, fast devsel, latency 0, IRQ 38, NUMA node 0 Memory at 600000000 (64-bit, non-prefetchable) [size=16K] Capabilities: [40] Express Endpoint, MSI 00 Capabilities: [80] Power Management version 3 Capabilities: [90] MSI: Enable+ Count=1/32 Maskable+ 64bit+ Capabilities: [b0] MSI-X: Enable- Count=32 Masked- Capabilities: [100] Advanced Error Reporting Capabilities: [260] Latency Tolerance Reporting Capabilities: [300] Secondary PCI Express Capabilities: [400] L1 PM Substates Kernel driver in use: nvme Kernel modules: nvme root@debnvme:~# smartctl identifies the drive as Model Number: KXG50ZNV512G NVMe TOSHIBA 512GB Serial Number: xxxxxxxxxxxx Firmware Version: AADA4106 PCI Vendor/Subsystem ID: 0x1179 IEEE OUI Identifier: 0x00080d 2023-03-28 Serial debug Serial connection worked with the boot image but produced no output for the Marvell adapter. There was no change with the changes listed below despite power cycling it repeatedly. Comments per kibi on #debian-raspberrypi <kibi> if the kernel doesn't boot, and if it doesn't very early, nearly no chances of getting logs stored onto the internal FS (or external SD card), since / is unlikely to be mounted at this stage <kibi> anyway: <kibi> early_con \u2192 /etc/default/raspi-extra-cmdline <kibi> printf \"enable_jtag_gpio=1\\nforce_turbo=1\\n\" >> /etc/default/raspi-firmware-custom <kibi> printf CONSOLES=\\\"ttyS1,115200\\\" >> /etc/default/raspi-firmware Confirmation root@cm4iob:~# cat /etc/default/raspi-extra-cmdline early_con root@cm4iob:~# cat /etc/default/raspi-firmware-custom enable_jtag_gpio=1 force_turbo=1 root@cm4iob:~# tail /etc/default/raspi-firmware #KERNEL_ARCH=\"arm64\" # Create a file \"/etc/default/raspi-firmware-custom\" to add custom parameter # to startup the kernel. Maybe not all options are supported. # (see https://www.raspberrypi.com/documentation/computers/config_txt.html) # # To pass extra arbitrary parameters to the kernel at boot, you can specify # them in \"/etc/default/raspi-extra-cmdline\". Keep in mind they should be # all in a single line, no comments! CONSOLES=\"ttyS1,115200\"root@cm4iob:~# root@cm4iob:~# 2023-03-29 focus on SD boot failure when PCIe card is present Marvell PCIe/SATA adapter Successful boot dmesg and serial TODO ~~Report more information on the PCIe/SATA adapters.~~ ~~Report dmesg output for various combinations (where boot was successful.)~~ ~~Perform serial debug for \"didn't boot\" scenarios.~~ ~~Search for tweaks to boot CM4 from PCIe/SATA.~~","title":"Pi CM4 PCIe testing"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#pi-cm4-pcie-testing","text":"","title":"Pi CM4 PCIe testing"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#purpose","text":"Test Debian Bookworm on a Pi CM4 with (and booting from) an NVME adapter and two SATA adapters in the \"Compute Module 4 IO Board\"","title":"Purpose"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#results-as-of-2023-03-28","text":"","title":"Results as of 2023-03-28"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#nvme-with-ssd","text":"System boots from NVME and works as expected. The system will not boot from SD card when the PCIe/NVME adapter is installed.","title":"NVME with SSD"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#asmedia-pciesata-adapter","text":"Boot from SD card works 3-4 times out of 5. Other times halts with a blank screen following the \"rainbow screen.\" When a SATA SSD is connected (when booting from SD) it appears to work. Boot from SSD was unsuccessful. The \"rainbow screen\" did not appear but the subsequent (BIOS) screen looping through possible boot modes ( NETWORK and BCM-USB-MSD ) At some point something was printed to the serial port but it looked like a single character at the wrong baud rate. Many times the system was power cycled with both SD card in place and SSD connected and the result was a blank screen and no serial output. Once the system came up and appeared to boot from the SD card and find root on the SSD. After sevaral tries I duplicated that and captured the serial output. root@cm4iob:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Flags: bus master, fast devsel, latency 0, IRQ 23 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 Memory behind bridge: 00000000-000fffff [size=1M] [32-bit] Prefetchable memory behind bridge: [disabled] [64-bit] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates Kernel driver in use: pcieport 01:00.0 SATA controller: ASMedia Technology Inc. Device 1064 (rev 02) (prog-if 01 [AHCI 1.0]) Subsystem: ZyDAS Technology Corp. Device 2116 Flags: bus master, fast devsel, latency 0, IRQ 38 Memory at 600080000 (32-bit, non-prefetchable) [size=8K] Memory at 600082000 (32-bit, non-prefetchable) [size=8K] Expansion ROM at 600000000 [virtual] [disabled] [size=512K] Capabilities: [40] Power Management version 3 Capabilities: [50] MSI: Enable+ Count=1/1 Maskable- 64bit+ Capabilities: [80] Express Endpoint, MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [130] Secondary PCI Express Kernel driver in use: ahci Kernel modules: ahci root@cm4iob:~#","title":"ASMedia PCIe/SATA adapter"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#marvel-pciesata-adapter","text":"Unable to boot from SD card when this adapter is in the PCIe slot. The \"rainbow screen\" appears and the screen goes blank with no further (on screen) behavior. With no SD card in the slot, the firmware cycles through boot options until it gets to PXE boot and then repeats the cycle. With the SD card removed and a bootable SSD connected to the adapter, the \"rainbow screen\" does not appear and there is no output to the serial port. Card dettails (from R-Pi OS) root@piserver:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Device tree node: /sys/firmware/devicetree/base/scb/pcie@7d500000/pci@0,0 Flags: bus master, fast devsel, latency 0 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 I/O behind bridge: 00000000-00000fff [size=4K] Memory behind bridge: c0000000-c00fffff [size=1M] Prefetchable memory behind bridge: [disabled] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates 01:00.0 SATA controller: Marvell Technology Group Ltd. 88SE9215 PCIe 2.0 x1 4-port SATA 6 Gb/s Controller (rev 11) (prog-if 01 [AHCI 1.0]) Subsystem: Marvell Technology Group Ltd. 88SE9215 PCIe 2.0 x1 4-port SATA 6 Gb/s Controller Device tree node: /sys/firmware/devicetree/base/scb/pcie@7d500000/pci@0,0/usb@0,0 Flags: bus master, fast devsel, latency 0, IRQ 67 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 I/O ports at 0000 Memory at 600010000 (32-bit, non-prefetchable) [size=2K] Expansion ROM at 600000000 [disabled] [size=64K] Capabilities: [40] Power Management version 3 Capabilities: [50] MSI: Enable+ Count=1/1 Maskable- 64bit- Capabilities: [70] Express Legacy Endpoint, MSI 00 Capabilities: [e0] SATA HBA v0.0 Capabilities: [100] Advanced Error Reporting Kernel driver in use: ahci Kernel modules: ahci root@piserver:~# Capture of serial output during R-Pi OS boot.","title":"Marvel PCIe/SATA adapter"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#nvme-details","text":"root@debnvme:~# lspci -v 00:00.0 PCI bridge: Broadcom Inc. and subsidiaries BCM2711 PCIe Bridge (rev 20) (prog-if 00 [Normal decode]) Flags: bus master, fast devsel, latency 0, IRQ 23 Bus: primary=00, secondary=01, subordinate=01, sec-latency=0 Memory behind bridge: 00000000-000fffff [size=1M] [32-bit] Prefetchable memory behind bridge: [disabled] [64-bit] Capabilities: [48] Power Management version 3 Capabilities: [ac] Express Root Port (Slot-), MSI 00 Capabilities: [100] Advanced Error Reporting Capabilities: [180] Vendor Specific Information: ID=0000 Rev=0 Len=028 <?> Capabilities: [240] L1 PM Substates Kernel driver in use: pcieport 01:00.0 Non-Volatile memory controller: Toshiba Corporation XG5 NVMe SSD Controller (prog-if 02 [NVM Express]) Subsystem: Toshiba Corporation XG5 NVMe SSD Controller Flags: bus master, fast devsel, latency 0, IRQ 38, NUMA node 0 Memory at 600000000 (64-bit, non-prefetchable) [size=16K] Capabilities: [40] Express Endpoint, MSI 00 Capabilities: [80] Power Management version 3 Capabilities: [90] MSI: Enable+ Count=1/32 Maskable+ 64bit+ Capabilities: [b0] MSI-X: Enable- Count=32 Masked- Capabilities: [100] Advanced Error Reporting Capabilities: [260] Latency Tolerance Reporting Capabilities: [300] Secondary PCI Express Capabilities: [400] L1 PM Substates Kernel driver in use: nvme Kernel modules: nvme root@debnvme:~# smartctl identifies the drive as Model Number: KXG50ZNV512G NVMe TOSHIBA 512GB Serial Number: xxxxxxxxxxxx Firmware Version: AADA4106 PCI Vendor/Subsystem ID: 0x1179 IEEE OUI Identifier: 0x00080d","title":"NVME details"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#2023-03-28-serial-debug","text":"Serial connection worked with the boot image but produced no output for the Marvell adapter. There was no change with the changes listed below despite power cycling it repeatedly. Comments per kibi on #debian-raspberrypi <kibi> if the kernel doesn't boot, and if it doesn't very early, nearly no chances of getting logs stored onto the internal FS (or external SD card), since / is unlikely to be mounted at this stage <kibi> anyway: <kibi> early_con \u2192 /etc/default/raspi-extra-cmdline <kibi> printf \"enable_jtag_gpio=1\\nforce_turbo=1\\n\" >> /etc/default/raspi-firmware-custom <kibi> printf CONSOLES=\\\"ttyS1,115200\\\" >> /etc/default/raspi-firmware Confirmation root@cm4iob:~# cat /etc/default/raspi-extra-cmdline early_con root@cm4iob:~# cat /etc/default/raspi-firmware-custom enable_jtag_gpio=1 force_turbo=1 root@cm4iob:~# tail /etc/default/raspi-firmware #KERNEL_ARCH=\"arm64\" # Create a file \"/etc/default/raspi-firmware-custom\" to add custom parameter # to startup the kernel. Maybe not all options are supported. # (see https://www.raspberrypi.com/documentation/computers/config_txt.html) # # To pass extra arbitrary parameters to the kernel at boot, you can specify # them in \"/etc/default/raspi-extra-cmdline\". Keep in mind they should be # all in a single line, no comments! CONSOLES=\"ttyS1,115200\"root@cm4iob:~# root@cm4iob:~#","title":"2023-03-28 Serial debug"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#2023-03-29-focus-on-sd-boot-failure-when-pcie-card-is-present","text":"","title":"2023-03-29 focus on SD boot failure when PCIe card is present"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#marvell-pciesata-adapter","text":"Successful boot dmesg and serial","title":"Marvell PCIe/SATA adapter"},{"location":"test-debug/Pi-CM4-PCIe/Pi_CM4_PCIe_testing/#todo","text":"~~Report more information on the PCIe/SATA adapters.~~ ~~Report dmesg output for various combinations (where boot was successful.)~~ ~~Perform serial debug for \"didn't boot\" scenarios.~~ ~~Search for tweaks to boot CM4 from PCIe/SATA.~~","title":"TODO"}]}